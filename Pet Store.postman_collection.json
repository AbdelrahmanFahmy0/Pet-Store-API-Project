{
	"info": {
		"_postman_id": "78234ab4-5e83-469f-b659-4feb44fdd422",
		"name": "Pet Store",
		"description": "<img src=\"https://content.pstmn.io/de7ac8b0-5a1d-4aa5-b1f8-16c24a4bc6be/aW1hZ2UucG5n\" width=\"519\" height=\"289\">\n\n> _**This collection provides a complete set of requests to interact with the Petstore sample API, which simulates a pet store system.**_",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28484444"
	},
	"item": [
		{
			"name": "Pet",
			"item": [
				{
					"name": "Add New Pet",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//Genrate random pet ID\r",
									"function generateRandomPetId() {\r",
									"    return Math.floor(Math.random() * 10000) + 1;\r",
									"}\r",
									"pm.collectionVariables.set(\"petID\",generateRandomPetId());\r",
									"\r",
									"//Generate random ID\r",
									"function generateRandomId() {\r",
									"    return Math.floor(Math.random() * 10) + 1;\r",
									"}\r",
									"\r",
									"//Generate random category\r",
									"function getRandomPetCategory() {\r",
									"    const categories = ['Dogs', 'Cats', 'Birds', 'Fish', 'Reptiles', 'Small Pets', 'Accessories', 'Food', 'Toys', 'Health Care'];\r",
									"    const randomIndex = Math.floor(Math.random() * categories.length);\r",
									"    return categories[randomIndex];\r",
									"}\r",
									"pm.collectionVariables.set(\"categoryID\",generateRandomId());\r",
									"pm.collectionVariables.set(\"category\",getRandomPetCategory());\r",
									"\r",
									"//Generate random pet name\r",
									"function getRandomPetName() {\r",
									"    const petNames = ['Bella', 'Charlie', 'Max', 'Luna', 'Rocky', 'Buddy', 'Milo', 'Coco', 'Daisy', 'Oliver'];\r",
									"    const randomName = petNames[Math.floor(Math.random() * petNames.length)];\r",
									"    const randomNumber = Math.floor(Math.random() * 1000) + 1; // number between 1–1000\r",
									"    return `${randomName}${randomNumber}`;\r",
									"}\r",
									"pm.collectionVariables.set(\"petName\",getRandomPetName());\r",
									"\r",
									"//Generste random photo url\r",
									"function getRandomPetPhotoUrl() {\r",
									"    const fileNames = ['dog1.jpg', 'cat2.jpg', 'bird3.jpg', 'fish4.jpg', 'hamster5.jpg'];\r",
									"    const randomFile = fileNames[Math.floor(Math.random() * fileNames.length)];\r",
									"    return `https://petstore.com/images/${randomFile}`;\r",
									"}\r",
									"pm.collectionVariables.set(\"photoUrl\",getRandomPetPhotoUrl());\r",
									"\r",
									"//Generate random tag\r",
									"function getRandomPetTag() {\r",
									"    const tags = ['Fluffy', 'Happy', 'Fast', 'Sleepy', 'Hunter', 'Jumper', 'Cuddly', 'Brave', 'Loyal', 'Playful'];\r",
									"    const randomIndex = Math.floor(Math.random() * tags.length);\r",
									"    return tags[randomIndex];\r",
									"}\r",
									"pm.collectionVariables.set(\"tagID\",generateRandomId());\r",
									"pm.collectionVariables.set(\"tag\",getRandomPetTag());\r",
									"\r",
									"//Generate random status\r",
									"function getRandomPetStatus() {\r",
									"    const statuses = ['available', 'pending', 'sold'];\r",
									"    const randomStatus = statuses[Math.floor(Math.random() * statuses.length)];\r",
									"    return randomStatus;\r",
									"}\r",
									"pm.collectionVariables.set(\"petStatus\",getRandomPetStatus());"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Checking the status code\r",
									"pm.test(\"Check that status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"//Checking the response time\r",
									"pm.test(\"Check that response time is less than 3000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"//Checking the response schema\r",
									"pm.test(\"Check that the response schema is valid\", function () {\r",
									"    const schema = {\r",
									"    type: \"object\",\r",
									"    properties: {\r",
									"        id: { type: \"integer\" },\r",
									"        category: {\r",
									"            type: \"object\",\r",
									"            properties: {\r",
									"                id: { type: \"integer\" },\r",
									"                name: { type: \"string\" }\r",
									"            },\r",
									"            required: [\"id\", \"name\"]  // Ensure both id and name are required in category\r",
									"        },\r",
									"        name: { type: \"string\" },\r",
									"        photoUrls: {\r",
									"            type: \"array\",\r",
									"            items: { type: \"string\" }  // photoUrls is an array of strings\r",
									"        },\r",
									"        tags: {\r",
									"            type: \"array\",\r",
									"            items: {\r",
									"                type: \"object\",\r",
									"                properties: {\r",
									"                    id: { type: \"integer\" },\r",
									"                    name: { type: \"string\" }\r",
									"                },\r",
									"                required: [\"id\", \"name\"]  // Ensure both id and name are required in tags\r",
									"            }\r",
									"        },\r",
									"        status: { type: \"string\" }\r",
									"    },\r",
									"    required: [\"id\", \"category\", \"name\", \"photoUrls\", \"tags\", \"status\"]  // Make sure these fields are required in the main object\r",
									"};\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"//Expected Data\r",
									"var jsonData = pm.response.json();\r",
									"var expectedID = pm.collectionVariables.get(\"petID\");\r",
									"var expectedCategoryID = pm.collectionVariables.get(\"categoryID\");\r",
									"var expectedCategoryName = pm.collectionVariables.get(\"category\");\r",
									"var expectedPetName = pm.collectionVariables.get(\"petName\");\r",
									"var expectedPhotoUrl = pm.collectionVariables.get(\"photoUrl\");\r",
									"var expectedTagID = pm.collectionVariables.get(\"tagID\");\r",
									"var expectedTagName = pm.collectionVariables.get(\"tag\");\r",
									"var expectedStatus = pm.collectionVariables.get(\"petStatus\");\r",
									"\r",
									"//Checking the id of the pet in the response\r",
									"pm.test(\"Check that the response contains correct ID\", function () {\r",
									"    pm.expect(jsonData.id).to.equal(expectedID);\r",
									"});\r",
									"\r",
									"//Checking the category of the pet in the response\r",
									"pm.test(\"Check that the response contains correct category data\", function () {\r",
									"    pm.expect(jsonData.category.id).to.equal(expectedCategoryID);\r",
									"    pm.expect(jsonData.category.name).to.equal(expectedCategoryName);\r",
									"});\r",
									"\r",
									"//Checking the the pet's name in the response\r",
									"pm.test(\"Check that the response contains correct pet's name\", function () {\r",
									"    pm.expect(jsonData.name).to.equal(expectedPetName);\r",
									"});\r",
									"\r",
									"//Checking the pet's photo URL in the response\r",
									"pm.test(\"Check that the response contains correct photo URL\", function () {\r",
									"    pm.expect(jsonData.photoUrls[0]).to.equal(expectedPhotoUrl);\r",
									"});\r",
									"\r",
									"//Checking the pet's tag data in the response\r",
									"pm.test(\"Check that the response contains correct pet tag data\", function () {\r",
									"    pm.expect(jsonData.tags[0].id).to.equal(expectedTagID);\r",
									"    pm.expect(jsonData.tags[0].name).to.equal(expectedTagName);\r",
									"});\r",
									"\r",
									"//Checking the pet's status in the response\r",
									"pm.test(\"Check that the response contains correct status\", function () {\r",
									"    pm.expect(jsonData.status).to.equal(expectedStatus);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": {{petID}},\r\n  \"category\": {\r\n    \"id\": {{categoryID}},\r\n    \"name\": \"{{category}}\"\r\n  },\r\n  \"name\": \"{{petName}}\",\r\n  \"photoUrls\": [\r\n    \"{{photoUrl}}\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": {{tagID}},\r\n      \"name\": \"{{tag}}\"\r\n    }\r\n  ],\r\n  \"status\": \"{{petStatus}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/pet",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"pet"
							]
						},
						"description": "### Add Pet\n\nThis endpoint allows you to add a new pet to the system.\n\n#### Request\n\n- Method: `Post`\n    \n- URL: `https://petstore.swagger.io/v2/pet`\n    \n- Request Body:\n    \n    - `id` (number, required): The unique ID of the pet.\n        \n    - `category` (object, required): The category the pet belongs to.  \n         - `id` (number): The unique ID of the category.  \n         - `name` (string): The name of the category.\n        \n    - `name` (string, required): The name of the pet.\n        \n    - `photoUrls` (array of strings, required): A list of photo URLs for the pet.\n        \n    - `tags` (array of objects): Tags associated with the pet.  \n         - `id` (number): The unique ID of the tag.  \n         - `name` (string): The name of the tag.\n        \n    - `status` (string): The status of the pet in the store (available, pending, sold).\n        \n\n#### Response\n\nUpon successful addition, the response will include the details of the newly added pet, including its ID, category, name, photo URLs, tags, and status."
					},
					"response": [
						{
							"name": "Add New Pet",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": 7299,\r\n    \"category\": {\r\n        \"id\": 8,\r\n        \"name\": \"Small Pets\"\r\n    },\r\n    \"name\": \"Daisy123\",\r\n    \"photoUrls\": [\r\n        \"https://petstore.com/images/hamster5.jpg\"\r\n    ],\r\n    \"tags\": [\r\n        {\r\n            \"id\": 4,\r\n            \"name\": \"Happy\"\r\n        }\r\n    ],\r\n    \"status\": \"available\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://petstore.swagger.io/v2/pet",
									"protocol": "https",
									"host": [
										"petstore",
										"swagger",
										"io"
									],
									"path": [
										"v2",
										"pet"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sat, 03 May 2025 18:30:19 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET, POST, DELETE, PUT"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type, api_key, Authorization"
								},
								{
									"key": "Server",
									"value": "Jetty(9.2.9.v20150224)"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 7299,\n    \"category\": {\n        \"id\": 8,\n        \"name\": \"Small Pets\"\n    },\n    \"name\": \"Daisy123\",\n    \"photoUrls\": [\n        \"https://petstore.com/images/hamster5.jpg\"\n    ],\n    \"tags\": [\n        {\n            \"id\": 4,\n            \"name\": \"Happy\"\n        }\n    ],\n    \"status\": \"available\"\n}"
						}
					]
				},
				{
					"name": "Find Pet By ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Checking the status code\r",
									"pm.test(\"Check that status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"//Checking the response time\r",
									"pm.test(\"Check that response time is less than 3000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"//Checking the response schema\r",
									"pm.test(\"Check that the response schema is valid\", function () {\r",
									"    const schema = {\r",
									"    type: \"object\",\r",
									"    properties: {\r",
									"        id: { type: \"integer\" },\r",
									"        category: {\r",
									"            type: \"object\",\r",
									"            properties: {\r",
									"                id: { type: \"integer\" },\r",
									"                name: { type: \"string\" }\r",
									"            },\r",
									"            required: [\"id\", \"name\"]  // Ensure both id and name are required in category\r",
									"        },\r",
									"        name: { type: \"string\" },\r",
									"        photoUrls: {\r",
									"            type: \"array\",\r",
									"            items: { type: \"string\" }  // photoUrls is an array of strings\r",
									"        },\r",
									"        tags: {\r",
									"            type: \"array\",\r",
									"            items: {\r",
									"                type: \"object\",\r",
									"                properties: {\r",
									"                    id: { type: \"integer\" },\r",
									"                    name: { type: \"string\" }\r",
									"                },\r",
									"                required: [\"id\", \"name\"]  // Ensure both id and name are required in tags\r",
									"            }\r",
									"        },\r",
									"        status: { type: \"string\" }\r",
									"    },\r",
									"    required: [\"id\", \"category\", \"name\", \"photoUrls\", \"tags\", \"status\"]  // Make sure these fields are required in the main object\r",
									"};\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"//Expected Data\r",
									"var jsonData = pm.response.json();\r",
									"var expectedID = pm.collectionVariables.get(\"petID\");\r",
									"var expectedCategoryID = pm.collectionVariables.get(\"categoryID\");\r",
									"var expectedCategoryName = pm.collectionVariables.get(\"category\");\r",
									"var expectedPetName = pm.collectionVariables.get(\"petName\");\r",
									"var expectedPhotoUrl = pm.collectionVariables.get(\"photoUrl\");\r",
									"var expectedTagID = pm.collectionVariables.get(\"tagID\");\r",
									"var expectedTagName = pm.collectionVariables.get(\"tag\");\r",
									"var expectedStatus = pm.collectionVariables.get(\"petStatus\");\r",
									"\r",
									"//Checking the id of the pet in the response\r",
									"pm.test(\"Check that the response contains correct ID\", function () {\r",
									"    pm.expect(jsonData.id).to.equal(expectedID);\r",
									"});\r",
									"\r",
									"//Checking the category of the pet in the response\r",
									"pm.test(\"Check that the response contains correct category data\", function () {\r",
									"    pm.expect(jsonData.category.id).to.equal(expectedCategoryID);\r",
									"    pm.expect(jsonData.category.name).to.equal(expectedCategoryName);\r",
									"});\r",
									"\r",
									"//Checking the the pet's name in the response\r",
									"pm.test(\"Check that the response contains correct pet's name\", function () {\r",
									"    pm.expect(jsonData.name).to.equal(expectedPetName);\r",
									"});\r",
									"\r",
									"//Checking the pet's photo URL in the response\r",
									"pm.test(\"Check that the response contains correct photo URL\", function () {\r",
									"    pm.expect(jsonData.photoUrls[0]).to.equal(expectedPhotoUrl);\r",
									"});\r",
									"\r",
									"//Checking the pet's tag data in the response\r",
									"pm.test(\"Check that the response contains correct pet tag data\", function () {\r",
									"    pm.expect(jsonData.tags[0].id).to.equal(expectedTagID);\r",
									"    pm.expect(jsonData.tags[0].name).to.equal(expectedTagName);\r",
									"});\r",
									"\r",
									"//Checking the pet's status in the response\r",
									"pm.test(\"Check that the response contains correct status\", function () {\r",
									"    pm.expect(jsonData.status).to.equal(expectedStatus);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/pet/{{petID}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"pet",
								"{{petID}}"
							]
						},
						"description": "### Get Pet Details\n\nThis endpoint retrieves the details of a pet based on the provided `petID`.\n\n#### Request\n\n- Method: `GET`\n    \n- URL: `{{base_url}}/pet/{{petID}}`\n    \n- Headers:\n    \n    - `accept: application/json`\n        \n\n#### Response\n\nThe response will include the details of the desired pet, including its ID, category, name, photo URLs, tags, and status."
					},
					"response": [
						{
							"name": "Find Pet By ID",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://petstore.swagger.io/v2/pet/2423",
									"protocol": "https",
									"host": [
										"petstore",
										"swagger",
										"io"
									],
									"path": [
										"v2",
										"pet",
										"2423"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sat, 03 May 2025 18:48:56 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET, POST, DELETE, PUT"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type, api_key, Authorization"
								},
								{
									"key": "Server",
									"value": "Jetty(9.2.9.v20150224)"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 7299,\n    \"category\": {\n        \"id\": 8,\n        \"name\": \"Small Pets\"\n    },\n    \"name\": \"Daisy123\",\n    \"photoUrls\": [\n        \"https://petstore.com/images/hamster5.jpg\"\n    ],\n    \"tags\": [\n        {\n            \"id\": 4,\n            \"name\": \"Happy\"\n        }\n    ],\n    \"status\": \"available\"\n}"
						}
					]
				},
				{
					"name": "Find Pets By Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Checking the status code\r",
									"pm.test(\"Check that status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"//Checking the response time\r",
									"pm.test(\"Check that response time is less than 3000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"//Expected Data\r",
									"const pets = pm.response.json();\r",
									"var expectedID = pm.collectionVariables.get(\"petID\");\r",
									"var expectedCategoryID = pm.collectionVariables.get(\"categoryID\");\r",
									"var expectedCategoryName = pm.collectionVariables.get(\"category\");\r",
									"var expectedPetName = pm.collectionVariables.get(\"petName\");\r",
									"var expectedPhotoUrl = pm.collectionVariables.get(\"photoUrl\");\r",
									"var expectedTagID = pm.collectionVariables.get(\"tagID\");\r",
									"var expectedTagName = pm.collectionVariables.get(\"tag\");\r",
									"var expectedStatus = pm.collectionVariables.get(\"petStatus\");\r",
									"\r",
									"//Finding pet using its ID\r",
									"function findPetById(pets, targetId) {\r",
									"    return pets.find(pet => pet.id === targetId);\r",
									"}\r",
									"const pet = findPetById(pets, expectedID);\r",
									"\r",
									"//Checking the category of the pet in the response\r",
									"pm.test(\"Check that the matched pet has correct category data\", function () {\r",
									"    pm.expect(pet.category.id).to.equal(expectedCategoryID);\r",
									"    pm.expect(pet.category.name).to.equal(expectedCategoryName);\r",
									"});\r",
									"\r",
									"//Checking the the pet's name in the response\r",
									"pm.test(\"Check that the matched pet has correct name\", function () {\r",
									"    pm.expect(pet.name).to.equal(expectedPetName);\r",
									"});\r",
									"\r",
									"//Checking the pet's photo URL in the response\r",
									"pm.test(\"Check that the matched pet has correct photo URL\", function () {\r",
									"    pm.expect(pet.photoUrls[0]).to.equal(expectedPhotoUrl);\r",
									"});\r",
									"\r",
									"//Checking the pet's tag data in the response\r",
									"pm.test(\"Check that the matched pet has correct tag data\", function () {\r",
									"    pm.expect(pet.tags[0].id).to.equal(expectedTagID);\r",
									"    pm.expect(pet.tags[0].name).to.equal(expectedTagName);\r",
									"});\r",
									"\r",
									"//Checking the pet's status in the response\r",
									"pm.test(\"Check that the matched pet has correct status\", function () {\r",
									"    pm.expect(pet.status).to.equal(expectedStatus);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/pet/findByStatus?status={{petStatus}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"pet",
								"findByStatus"
							],
							"query": [
								{
									"key": "status",
									"value": "{{petStatus}}"
								}
							]
						},
						"description": "This endpoint allows you to find pets by their status in the system.\n\n#### Request\n\n- Method: `GET`\n    \n- URL: {{base_url}}/pet/findByStatus?status={{petStatus}}\n    \n- Request Parameters:\n    \n    - status (string, required): The status of the pets to be retrieved.\n        \n\n### Response\n\nThe response will include an array of pets with their details such as ID, category, name, photo URLs, tags, and status."
					},
					"response": [
						{
							"name": "Find Pets By Status",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://petstore.swagger.io/v2/pet/findByStatus?status=pending",
									"protocol": "https",
									"host": [
										"petstore",
										"swagger",
										"io"
									],
									"path": [
										"v2",
										"pet",
										"findByStatus"
									],
									"query": [
										{
											"key": "status",
											"value": "pending"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sat, 03 May 2025 19:20:44 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET, POST, DELETE, PUT"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type, api_key, Authorization"
								},
								{
									"key": "Server",
									"value": "Jetty(9.2.9.v20150224)"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": 9223372036854775289,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775290,\n        \"category\": {\n            \"id\": 1,\n            \"name\": \"cat1\"\n        },\n        \"name\": \"purplefieldstester1\",\n        \"photoUrls\": [\n            \"https://purplefieldstestimage1\",\n            \"https://purplefieldstestimage2\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 1,\n                \"name\": \"naughty\"\n            },\n            {\n                \"id\": 2,\n                \"name\": \"nice\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 3297,\n        \"name\": \"BuddyGet\",\n        \"photoUrls\": [\n            \"https://example.com/dog.jpg\"\n        ],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9098,\n        \"name\": \"BuddyUpdate\",\n        \"photoUrls\": [\n            \"https://example.com/dog.jpg\"\n        ],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775297,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775301,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 1181,\n        \"name\": \"BuddyGet\",\n        \"photoUrls\": [\n            \"https://example.com/dog.jpg\"\n        ],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 7858,\n        \"name\": \"Buddy\",\n        \"photoUrls\": [\n            \"https://example.com/dog.jpg\"\n        ],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 6495,\n        \"name\": \"tigreton\",\n        \"photoUrls\": [],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 214725,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"{{petName}}\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 6061,\n        \"name\": \"Buddy\",\n        \"photoUrls\": [\n            \"https://example.com/dog.jpg\"\n        ],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 50,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"tag\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 3141,\n        \"name\": \"BuddyGet\",\n        \"photoUrls\": [\n            \"https://example.com/dog.jpg\"\n        ],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 4494,\n        \"name\": \"Buddy\",\n        \"photoUrls\": [\n            \"https://example.com/dog.jpg\"\n        ],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 8866804164937990236,\n        \"name\": \"TestPet\",\n        \"photoUrls\": [\n            \"http://example.com/photo.png\"\n        ],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 4145519942351012843,\n        \"name\": \"Updated\",\n        \"photoUrls\": [\n            \"http://example.com/photo.png\"\n        ],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 785630,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"{{petName}}\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 128,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"Horse\"\n        },\n        \"name\": \"Ahal-Teke\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 760233,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"Вася\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 1234321,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"Cat\"\n        },\n        \"name\": \"Pamuk\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"My cute cat\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 19,\n        \"category\": {\n            \"id\": 160,\n            \"name\": \"Kevin Thomas\"\n        },\n        \"name\": \"Vincent Casey\",\n        \"photoUrls\": [\n            \"https://placekitten.com/704/757\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 63,\n                \"name\": \"Wheat\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 555111222333,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"Jayda12\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 99999999999999,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 1003,\n        \"category\": {\n            \"id\": 199,\n            \"name\": \"Dogs\"\n        },\n        \"name\": \"Muhtar\",\n        \"photoUrls\": [\n            \"https://avatars.mds.yandex.net/get-kinopoisk-image/1773646/fac0e72d-d717-42d4-9d70-d3d717ee25b3/1920x\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 2,\n                \"name\": \"tag2\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 999999,\n        \"category\": {\n            \"id\": 2006,\n            \"name\": \"dog\"\n        },\n        \"name\": \"Richi\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 1,\n                \"name\": \"shelter\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9999999,\n        \"category\": {\n            \"id\": 2006,\n            \"name\": \"dog\"\n        },\n        \"name\": \"Richi\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 1,\n                \"name\": \"shelter\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 812,\n        \"category\": {\n            \"id\": 800,\n            \"name\": \"Daniel Wright\"\n        },\n        \"name\": \"Heather Miller\",\n        \"photoUrls\": [\n            \"https://placekitten.com/821/669\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 790,\n                \"name\": \"BlanchedAlmond\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 201,\n        \"category\": {\n            \"id\": 1,\n            \"name\": \"string\"\n        },\n        \"name\": \"anna\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 496,\n        \"category\": {\n            \"id\": 3,\n            \"name\": \"Michael Weeks\"\n        },\n        \"name\": \"Helen Bowman\",\n        \"photoUrls\": [\n            \"https://placekitten.com/445/705\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 524,\n                \"name\": \"LightSlateGray\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 4248,\n        \"name\": \"BuddyDelete\",\n        \"photoUrls\": [\n            \"https://example.com/dog.jpg\"\n        ],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 941,\n        \"category\": {\n            \"id\": 553,\n            \"name\": \"Brandy Rodriguez\"\n        },\n        \"name\": \"Donald Johnson\",\n        \"photoUrls\": [\n            \"https://dummyimage.com/1007x541\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 62,\n                \"name\": \"Lime\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 49,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"tag\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 2738,\n        \"name\": \"Buddy\",\n        \"photoUrls\": [\n            \"https://example.com/dog.jpg\"\n        ],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 6606,\n        \"name\": \"BuddyUpdate\",\n        \"photoUrls\": [\n            \"https://example.com/dog.jpg\"\n        ],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 762,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"Dog\"\n        },\n        \"name\": \"Margie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"tag1\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9955,\n        \"category\": {\n            \"id\": 1,\n            \"name\": \"Dogs\"\n        },\n        \"name\": \"TestPet_9955\",\n        \"photoUrls\": [\n            \"https://example.com/pet.jpg\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 1,\n                \"name\": \"test_tag\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 66003,\n        \"name\": \"BuddyGet\",\n        \"photoUrls\": [\n            \"https://example.com/dog.jpg\"\n        ],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 405,\n        \"category\": {\n            \"id\": 959,\n            \"name\": \"Nicole York\"\n        },\n        \"name\": \"Brandon James\",\n        \"photoUrls\": [\n            \"https://picsum.photos/469/781\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 650,\n                \"name\": \"DarkSlateBlue\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 440,\n        \"category\": {\n            \"id\": 962,\n            \"name\": \"Daniel Wolfe\"\n        },\n        \"name\": \"Bobby Jr.\",\n        \"photoUrls\": [\n            \"https://picsum.photos/408/861\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 269,\n                \"name\": \"Indigo\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 450,\n        \"category\": {\n            \"id\": 656,\n            \"name\": \"Brian Edwards\"\n        },\n        \"name\": \"Charles Fletcher\",\n        \"photoUrls\": [\n            \"https://dummyimage.com/252x949\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 985,\n                \"name\": \"MidnightBlue\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 106861,\n        \"name\": \"BuddyGet\",\n        \"photoUrls\": [\n            \"https://example.com/dog.jpg\"\n        ],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 140685,\n        \"name\": \"BuddyDelete\",\n        \"photoUrls\": [\n            \"https://example.com/dog.jpg\"\n        ],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 142365,\n        \"name\": \"BuddyGet\",\n        \"photoUrls\": [\n            \"https://example.com/dog.jpg\"\n        ],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 172546,\n        \"name\": \"BuddyUpdate\",\n        \"photoUrls\": [\n            \"https://example.com/dog.jpg\"\n        ],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 847,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"Thomas\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 250,\n                \"name\": \"tag1\"\n            },\n            {\n                \"id\": 155,\n                \"name\": \"m.avsyankina\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 67,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"tag\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 280,\n        \"category\": {\n            \"id\": 433,\n            \"name\": \"Brittany Mason\"\n        },\n        \"name\": \"Glenn Thompson\",\n        \"photoUrls\": [\n            \"https://placekitten.com/123/542\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 767,\n                \"name\": \"Aqua\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 780,\n        \"category\": {\n            \"id\": 36,\n            \"name\": \"Christopher Robertson\"\n        },\n        \"name\": \"Steven Harris\",\n        \"photoUrls\": [\n            \"https://dummyimage.com/37x580\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 2,\n                \"name\": \"fluffy\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 794,\n        \"category\": {\n            \"id\": 2,\n            \"name\": \"Cat\"\n        },\n        \"name\": \"Jamie Mcconnell\",\n        \"photoUrls\": [\n            \"https://dummyimage.com/368x532\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 306,\n                \"name\": \"DarkCyan\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 480,\n        \"category\": {\n            \"id\": 546,\n            \"name\": \"Catherine Hobbs\"\n        },\n        \"name\": \"Michael Davis\",\n        \"photoUrls\": [],\n        \"tags\": [\n            {\n                \"id\": 428,\n                \"name\": \"FireBrick\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 123445345,\n        \"category\": {\n            \"id\": 1,\n            \"name\": \"Cats\"\n        },\n        \"name\": \"Whiskers\",\n        \"photoUrls\": [\n            \"https://example.com/whiskers.jpg\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 1,\n                \"name\": \"friendly\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 421146,\n        \"name\": \"BuddyDelete\",\n        \"photoUrls\": [\n            \"https://example.com/dog.jpg\"\n        ],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 8403038222,\n        \"category\": {\n            \"id\": 1,\n            \"name\": \"BEB\"\n        },\n        \"name\": \"Whiskers\",\n        \"photoUrls\": [\n            \"https://example.com/whiskers.jpg\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 1,\n                \"name\": \"friendly\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 919,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"Maximo\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 116,\n        \"category\": {\n            \"id\": 20,\n            \"name\": \"Harry Stewart\"\n        },\n        \"name\": \"Kimberly Martinez\",\n        \"photoUrls\": [\n            \"https://picsum.photos/357/321\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 135,\n                \"name\": \"PapayaWhip\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 53,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"Anjali\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 986,\n                \"name\": \"tag1\"\n            },\n            {\n                \"id\": 716,\n                \"name\": \"m.avsyankina\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 741,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"Kristopher\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 481,\n                \"name\": \"tag1\"\n            },\n            {\n                \"id\": 383,\n                \"name\": \"m.avsyankina\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 246,\n        \"category\": {\n            \"id\": 866,\n            \"name\": \"Linda Wilson\"\n        },\n        \"photoUrls\": [\n            \"https://placekitten.com/819/41\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 764,\n                \"name\": \"PaleGoldenRod\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 54,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"tag\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 1921,\n        \"name\": \"Snoopy\",\n        \"photoUrls\": [\n            \"https://example.com/dog.jpg\"\n        ],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 985907,\n        \"name\": \"Snoopy\",\n        \"photoUrls\": [\n            \"https://example.com/dog.jpg\"\n        ],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 2910,\n        \"name\": \"Snoopy\",\n        \"photoUrls\": [\n            \"https://example.com/dog.jpg\"\n        ],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 991752,\n        \"name\": \"Snoopy\",\n        \"photoUrls\": [\n            \"https://example.com/dog.jpg\"\n        ],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9222968140497180179,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"test\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 119601,\n        \"name\": \"Snoopy\",\n        \"photoUrls\": [\n            \"https://example.com/dog.jpg\"\n        ],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 158047,\n        \"name\": \"Snoopy\",\n        \"photoUrls\": [\n            \"https://example.com/dog.jpg\"\n        ],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 242764,\n        \"name\": \"Snoopy\",\n        \"photoUrls\": [\n            \"https://example.com/dog.jpg\"\n        ],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 4088,\n        \"name\": \"Snoopy\",\n        \"photoUrls\": [\n            \"https://example.com/dog.jpg\"\n        ],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 583,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"Brent\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 644,\n                \"name\": \"tag1\"\n            },\n            {\n                \"id\": 703,\n                \"name\": \"m.avsyankina\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 379723,\n        \"name\": \"Snoopy\",\n        \"photoUrls\": [\n            \"https://example.com/dog.jpg\"\n        ],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 61,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"tag\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 6948,\n        \"category\": {\n            \"id\": 1,\n            \"name\": \"Dogs\"\n        },\n        \"name\": \"TestPet_6948\",\n        \"photoUrls\": [\n            \"https://example.com/pet.jpg\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 1,\n                \"name\": \"test_tag\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 234567,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 121173,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 432,\n        \"category\": {\n            \"id\": 5,\n            \"name\": \"Cats\"\n        },\n        \"name\": \"Max\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 5,\n                \"name\": \"cat\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 24,\n        \"category\": {\n            \"id\": 24,\n            \"name\": \"Dog\"\n        },\n        \"name\": \"Child Monkey\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 149248,\n        \"name\": \"Snoopy\",\n        \"photoUrls\": [\n            \"https://example.com/dog.jpg\"\n        ],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 447052,\n        \"name\": \"Snoopy\",\n        \"photoUrls\": [\n            \"https://example.com/dog.jpg\"\n        ],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 449582,\n        \"name\": \"Snoopy\",\n        \"photoUrls\": [\n            \"https://example.com/dog.jpg\"\n        ],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 595870,\n        \"name\": \"Snoopy\",\n        \"photoUrls\": [\n            \"https://example.com/dog.jpg\"\n        ],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 599333,\n        \"name\": \"Snoopy\",\n        \"photoUrls\": [\n            \"https://example.com/dog.jpg\"\n        ],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 666228,\n        \"name\": \"Snoopy\",\n        \"photoUrls\": [\n            \"https://example.com/dog.jpg\"\n        ],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 781549,\n        \"name\": \"Snoopy\",\n        \"photoUrls\": [\n            \"https://example.com/dog.jpg\"\n        ],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 838597,\n        \"name\": \"Snoopy\",\n        \"photoUrls\": [\n            \"https://example.com/dog.jpg\"\n        ],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 939332,\n        \"name\": \"Snoopy\",\n        \"photoUrls\": [\n            \"https://example.com/dog.jpg\"\n        ],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 690,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"Nona\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 731,\n                \"name\": \"tag1\"\n            },\n            {\n                \"id\": 162,\n                \"name\": \"m.avsyankina\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 125274,\n        \"name\": \"Snoopy\",\n        \"photoUrls\": [\n            \"https://example.com/dog.jpg\"\n        ],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 126485,\n        \"name\": \"Snoopy\",\n        \"photoUrls\": [\n            \"https://example.com/dog.jpg\"\n        ],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 165467,\n        \"name\": \"Snoopy\",\n        \"photoUrls\": [\n            \"https://example.com/dog.jpg\"\n        ],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 236590,\n        \"name\": \"Snoopy\",\n        \"photoUrls\": [\n            \"https://example.com/dog.jpg\"\n        ],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 6999,\n        \"category\": {\n            \"id\": 198,\n            \"name\": \"Dogs\"\n        },\n        \"name\": \"Dag\",\n        \"photoUrls\": [\n            \"https://img-s-msn-com.akamaized.net/tenant/amp/entityid/AA1sAAY4.img?w=1280&h=853&m=4&q=68\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 2,\n                \"name\": \"tag2\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 83,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"Rey\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 475,\n                \"name\": \"tag1\"\n            },\n            {\n                \"id\": 351,\n                \"name\": \"m.avsyankina\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 386776,\n        \"name\": \"Snoopy\",\n        \"photoUrls\": [\n            \"https://example.com/dog.jpg\"\n        ],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 437383,\n        \"name\": \"Snoopy\",\n        \"photoUrls\": [\n            \"https://example.com/dog.jpg\"\n        ],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 1746282508,\n        \"category\": {\n            \"id\": 72,\n            \"name\": \"bird\"\n        },\n        \"name\": \"wDyhfeaP\",\n        \"photoUrls\": [\n            \"https://example.com/photo.jpg\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 27,\n                \"name\": \"tiny\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 1746282517,\n        \"category\": {\n            \"id\": 33,\n            \"name\": \"fish\"\n        },\n        \"name\": \"vldhGGHC\",\n        \"photoUrls\": [\n            \"https://example.com/photo.jpg\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 57,\n                \"name\": \"fluffy\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 1746282523,\n        \"category\": {\n            \"id\": 49,\n            \"name\": \"dog\"\n        },\n        \"name\": \"EdJKJqbi\",\n        \"photoUrls\": [\n            \"https://example.com/photo.jpg\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 61,\n                \"name\": \"tiny\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 1746282524,\n        \"category\": {\n            \"id\": 38,\n            \"name\": \"fish\"\n        },\n        \"name\": \"UOvXAujL\",\n        \"photoUrls\": [\n            \"https://example.com/photo.jpg\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 33,\n                \"name\": \"black\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 1746282525,\n        \"category\": {\n            \"id\": 17,\n            \"name\": \"bird\"\n        },\n        \"name\": \"JOQdapde\",\n        \"photoUrls\": [\n            \"https://example.com/photo.jpg\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 31,\n                \"name\": \"black\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 555753,\n        \"name\": \"Snoopy\",\n        \"photoUrls\": [\n            \"https://example.com/dog.jpg\"\n        ],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 559010,\n        \"name\": \"Snoopy\",\n        \"photoUrls\": [\n            \"https://example.com/dog.jpg\"\n        ],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 591129,\n        \"name\": \"Snoopy\",\n        \"photoUrls\": [\n            \"https://example.com/dog.jpg\"\n        ],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 703850,\n        \"category\": {\n            \"id\": 2020,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 787413,\n        \"name\": \"Snoopy\",\n        \"photoUrls\": [\n            \"https://example.com/dog.jpg\"\n        ],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 789560,\n        \"name\": \"Snoopy\",\n        \"photoUrls\": [\n            \"https://example.com/dog.jpg\"\n        ],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 792782,\n        \"name\": \"Snoopy\",\n        \"photoUrls\": [\n            \"https://example.com/dog.jpg\"\n        ],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 914237,\n        \"name\": \"Snoopy\",\n        \"photoUrls\": [\n            \"https://example.com/dog.jpg\"\n        ],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 978333,\n        \"name\": \"Snoopy\",\n        \"photoUrls\": [\n            \"https://example.com/dog.jpg\"\n        ],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 981762,\n        \"name\": \"Snoopy\",\n        \"photoUrls\": [\n            \"https://example.com/dog.jpg\"\n        ],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 1746283302,\n        \"name\": \"tigre\",\n        \"photoUrls\": [],\n        \"tags\": [\n            {\n                \"id\": 1,\n                \"name\": \"salvaje\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 1746283304,\n        \"name\": \"gatito\",\n        \"photoUrls\": [],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 1746283305,\n        \"name\": \"tigre\",\n        \"photoUrls\": [],\n        \"tags\": [\n            {\n                \"id\": 1,\n                \"name\": \"salvaje\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 378455,\n        \"name\": \"Snoopy\",\n        \"photoUrls\": [\n            \"https://example.com/dog.jpg\"\n        ],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775302,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"fish\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775305,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"fish\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775313,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775314,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775321,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"fish\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775323,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775327,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"fish\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 2028,\n        \"name\": \"Snoopy\",\n        \"photoUrls\": [\n            \"https://example.com/dog.jpg\"\n        ],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 3990,\n        \"name\": \"Snoopy\",\n        \"photoUrls\": [\n            \"https://example.com/dog.jpg\"\n        ],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 6109,\n        \"name\": \"Snoopy\",\n        \"photoUrls\": [\n            \"https://example.com/dog.jpg\"\n        ],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775353,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775354,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775357,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"fish\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775358,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 136497,\n        \"name\": \"Snoopy\",\n        \"photoUrls\": [\n            \"https://example.com/dog.jpg\"\n        ],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 141154,\n        \"name\": \"Snoopy\",\n        \"photoUrls\": [\n            \"https://example.com/dog.jpg\"\n        ],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775366,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"fish\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775379,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"fish\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775380,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"fish\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775381,\n        \"category\": {\n            \"id\": 8212614,\n            \"name\": \"voluptate ea qui sint\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"quis Lorem Duis aute\",\n            \"veniam nulla culpa\"\n        ],\n        \"tags\": [\n            {\n                \"id\": -42092226,\n                \"name\": \"labore\"\n            },\n            {\n                \"id\": -72688380,\n                \"name\": \"consectetur sint qui\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775382,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"Noel Runte\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775383,\n        \"name\": \"Azorell without category\",\n        \"photoUrls\": [\n            \"https://i.insider.com/5489a390eab8ea6938b17e33?width=300&format=jpeg&auto=webp\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"castrat\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775386,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 1804,\n        \"category\": {\n            \"id\": 1804,\n            \"name\": \"dog\"\n        },\n        \"name\": \"Rex\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 1804,\n                \"name\": \"shepherd\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 1746284481,\n        \"name\": \"gatito\",\n        \"photoUrls\": [],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775390,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"Pomeranian\"\n        },\n        \"name\": \"Yeontn\",\n        \"photoUrls\": [\n            \"https://www.google.com/url?sa=i&url=https%3A%2F%2Fwikibio.in%2Fyeontan%2F&psig=AOvVaw0UdJeOGlk-jKSOtT-nplW1&ust=1682581409377000&source=images&cd=vfe&ved=0CA4QjRxqFwoTCMCQvJiuyP4CFQAAAAAdAAAAABAI\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"Dog\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 1746284484,\n        \"name\": \"gatopardo\",\n        \"photoUrls\": [],\n        \"tags\": [\n            {\n                \"id\": 1,\n                \"name\": \"gato\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 511717,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"Cat\"\n        },\n        \"name\": \"Cotton\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"My lovely cat\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775406,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"fish\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775412,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775413,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775414,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"#%status%#\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775415,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775416,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggietest\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 32,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"tag\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775418,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"fish\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775421,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"fish\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 1746284750,\n        \"name\": \"tigreton\",\n        \"photoUrls\": [],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 1746284758,\n        \"name\": \"tigre\",\n        \"photoUrls\": [],\n        \"tags\": [\n            {\n                \"id\": 1,\n                \"name\": \"salvaje\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775426,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 1746284836,\n        \"name\": \"tigre\",\n        \"photoUrls\": [],\n        \"tags\": [\n            {\n                \"id\": 1,\n                \"name\": \"salvaje\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775440,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775444,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775446,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775449,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"fish\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 82436,\n        \"name\": \"Snoopy\",\n        \"photoUrls\": [\n            \"https://example.com/dog.jpg\"\n        ],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 84600,\n        \"name\": \"Snoopy\",\n        \"photoUrls\": [\n            \"https://example.com/dog.jpg\"\n        ],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 85821,\n        \"name\": \"Snoopy\",\n        \"photoUrls\": [\n            \"https://example.com/dog.jpg\"\n        ],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775451,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 146052,\n        \"name\": \"Snoopy\",\n        \"photoUrls\": [\n            \"https://example.com/dog.jpg\"\n        ],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775468,\n        \"category\": {\n            \"id\": 10,\n            \"name\": \"ZAP\"\n        },\n        \"name\": \"ZAP\",\n        \"photoUrls\": [\n            \"John Doe\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 10,\n                \"name\": \"ZAP\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775469,\n        \"category\": {\n            \"id\": 10,\n            \"name\": \"ZAP\"\n        },\n        \"name\": \"ZAP\",\n        \"photoUrls\": [\n            \"John Doe\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 10,\n                \"name\": \"ZAP\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775470,\n        \"name\": \"gatopardo\",\n        \"photoUrls\": [],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"gato\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775471,\n        \"name\": \"tigre\",\n        \"photoUrls\": [],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"salvaje\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775474,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"#%status%#\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775475,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775479,\n        \"name\": \"gatopardo\",\n        \"photoUrls\": [],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"gato\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775480,\n        \"name\": \"tigre\",\n        \"photoUrls\": [],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"salvaje\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775481,\n        \"name\": \"gatopardo\",\n        \"photoUrls\": [],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"gato\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775483,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"fish\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775488,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 747,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"Dogs\"\n        },\n        \"name\": \"Bob\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775499,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 154867,\n        \"name\": \"gatopardo\",\n        \"photoUrls\": [],\n        \"tags\": [\n            {\n                \"id\": 1,\n                \"name\": \"gato\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 308468,\n        \"name\": \"gatopardo\",\n        \"photoUrls\": [],\n        \"tags\": [\n            {\n                \"id\": 1,\n                \"name\": \"gato\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 777061,\n        \"name\": \"tigre\",\n        \"photoUrls\": [],\n        \"tags\": [\n            {\n                \"id\": 1,\n                \"name\": \"salvaje\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 85208,\n        \"name\": \"gatopardo\",\n        \"photoUrls\": [],\n        \"tags\": [\n            {\n                \"id\": 1,\n                \"name\": \"gato\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 22,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"Monkey\"\n        },\n        \"name\": \"Child Monkey\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 241184,\n        \"name\": \"Snoopy\",\n        \"photoUrls\": [\n            \"https://example.com/dog.jpg\"\n        ],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 324138,\n        \"name\": \"Snoopy\",\n        \"photoUrls\": [\n            \"https://example.com/dog.jpg\"\n        ],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 326799,\n        \"name\": \"Snoopy\",\n        \"photoUrls\": [\n            \"https://example.com/dog.jpg\"\n        ],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 41,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"tag\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 832266,\n        \"name\": \"Snoopy\",\n        \"photoUrls\": [\n            \"https://example.com/dog.jpg\"\n        ],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 834808,\n        \"name\": \"Snoopy\",\n        \"photoUrls\": [\n            \"https://example.com/dog.jpg\"\n        ],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 867302,\n        \"name\": \"Snoopy\",\n        \"photoUrls\": [\n            \"https://example.com/dog.jpg\"\n        ],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 869307,\n        \"name\": \"Snoopy\",\n        \"photoUrls\": [\n            \"https://example.com/dog.jpg\"\n        ],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 677,\n        \"name\": \"Snoopy\",\n        \"photoUrls\": [\n            \"https://example.com/dog.jpg\"\n        ],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 2556,\n        \"name\": \"Snoopy\",\n        \"photoUrls\": [\n            \"https://example.com/dog.jpg\"\n        ],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 44697,\n        \"name\": \"Snoopy\",\n        \"photoUrls\": [\n            \"https://example.com/dog.jpg\"\n        ],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 46524,\n        \"name\": \"Snoopy\",\n        \"photoUrls\": [\n            \"https://example.com/dog.jpg\"\n        ],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 419799,\n        \"name\": \"Snoopy\",\n        \"photoUrls\": [\n            \"https://example.com/dog.jpg\"\n        ],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 594565,\n        \"name\": \"Snoopy\",\n        \"photoUrls\": [\n            \"https://example.com/dog.jpg\"\n        ],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 63,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"tag\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 15,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 285,\n        \"category\": {\n            \"id\": 285,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 285,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775516,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"fish\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 456,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 42181115,\n        \"category\": {\n            \"id\": 8557341,\n            \"name\": \"ut nisi\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"fugiat cillum\",\n            \"cillum\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 67927893,\n                \"name\": \"et Excepteur ad\"\n            },\n            {\n                \"id\": -13431872,\n                \"name\": \"sint ut\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775523,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"Cat\"\n        },\n        \"name\": \"cotton\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"my lovely cat\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775526,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"fish\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775527,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"doggie\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775535,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775536,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775537,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"#%status%#\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775542,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"Nemo\"\n        },\n        \"name\": \"Fish\",\n        \"photoUrls\": [\n            \"https://avatars.mds.yandex.net/i?id=1987d977026b87b0889f11fa19ed76ffd75699d0-10876270-images-thumbs&n=13\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775544,\n        \"name\": \"doggie\",\n        \"photoUrls\": [],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775546,\n        \"name\": \"doggie\",\n        \"photoUrls\": [],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775550,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"test\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775558,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775559,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"fish\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775560,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775562,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775565,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"fish\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775572,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775591,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"fish\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775592,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775602,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"#%status%#\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775603,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775604,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 26,\n        \"category\": {\n            \"id\": 26,\n            \"name\": \"Cow\"\n        },\n        \"name\": \"Child Monkey\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 27,\n        \"category\": {\n            \"id\": 27,\n            \"name\": \"Baffallo\"\n        },\n        \"name\": \"Child Monkey\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 28,\n        \"category\": {\n            \"id\": 28,\n            \"name\": \"Rabbit\"\n        },\n        \"name\": \"Child Monkey\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 596705,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"коля\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775620,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"fish\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 3114,\n        \"category\": {\n            \"id\": 3114,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"abc\",\n            \"def\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"test0\"\n            },\n            {\n                \"id\": 1,\n                \"name\": \"test1\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775623,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 866993,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"коля\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775625,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"fish\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 23,\n        \"category\": {\n            \"id\": 23,\n            \"name\": \"Deer\"\n        },\n        \"name\": \"Child Monkey\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 25,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"tag\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775634,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 922,\n        \"category\": {\n            \"id\": 2,\n            \"name\": \"dog\"\n        },\n        \"name\": \"doggie-yoggie\",\n        \"photoUrls\": [],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775647,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"fish\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775651,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775652,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"#%status%#\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775667,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"fish\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775668,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"fish\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775669,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 112233,\n        \"category\": {\n            \"id\": 30,\n            \"name\": \"Eq-dog\"\n        },\n        \"name\": \"Postman\",\n        \"photoUrls\": [\n            \"URLLink\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 10,\n                \"name\": \"Doberman\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775673,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775678,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"fish\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775684,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775689,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"Jerry\"\n        },\n        \"name\": \"Mouse\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"Mouse\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775690,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"fish\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775696,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"fish\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775699,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775705,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775706,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775707,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 92779589,\n        \"category\": {\n            \"id\": 75847827,\n            \"name\": \"kmzXtj4e\"\n        },\n        \"name\": \"wSn6ll2p\",\n        \"photoUrls\": [\n            \"qAxRtpk4\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 43531729,\n                \"name\": \"IS5sTRjO\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775734,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"fish\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775739,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 43761248,\n        \"category\": {\n            \"id\": 59114765,\n            \"name\": \"AibEQSdX\"\n        },\n        \"name\": \"LYyv4kdZ\",\n        \"photoUrls\": [\n            \"5cPvXe2f\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 67497357,\n                \"name\": \"peeqfj4g\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775751,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"fish\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775762,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775763,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775764,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775765,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775766,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"#%status%#\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 62,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"tag\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775778,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"fish\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 891492,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"коля\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775783,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"Prince\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775785,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"fish\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775786,\n        \"photoUrls\": [],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775787,\n        \"photoUrls\": [],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775791,\n        \"photoUrls\": [],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 913545,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"коля\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775795,\n        \"photoUrls\": [],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775797,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"fish\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775800,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775807,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"fish\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 119922,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"коля\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 140,\n        \"category\": {\n            \"id\": 66,\n            \"name\": \"python\"\n        },\n        \"name\": \"python\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 66,\n                \"name\": \"sobaken\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 98,\n        \"category\": {\n            \"id\": 66,\n            \"name\": \"python\"\n        },\n        \"name\": \"python\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 66,\n                \"name\": \"sobaken\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 77,\n        \"category\": {\n            \"id\": 145,\n            \"name\": \"python\"\n        },\n        \"name\": \"python\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 49,\n                \"name\": \"sobaken\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 175,\n        \"category\": {\n            \"id\": 23,\n            \"name\": \"python\"\n        },\n        \"name\": \"python\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 132,\n                \"name\": \"sobaken\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 34,\n        \"category\": {\n            \"id\": 15,\n            \"name\": \"python\"\n        },\n        \"name\": \"python\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 27,\n                \"name\": \"sobaken\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 666273,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"коля\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 454218,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"коля\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 42,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"tag\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 1488148814881488,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"Elbert.Koelpin94\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 156,\n        \"category\": {\n            \"id\": 5,\n            \"name\": \"Binatang\"\n        },\n        \"name\": \"Kucing\",\n        \"photoUrls\": [\n            \"https://petstore.swagger.io/v2/pet/156/uploadImage\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 2,\n                \"name\": \"Belang\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 69745597,\n        \"category\": {\n            \"id\": 81776001,\n            \"name\": \"anim incididunt\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"ut elit\",\n            \"in\"\n        ],\n        \"tags\": [\n            {\n                \"id\": -30941697,\n                \"name\": \"laborum\"\n            },\n            {\n                \"id\": -56138752,\n                \"name\": \"tempor incididunt\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 1746292280,\n        \"name\": \"tigre\",\n        \"photoUrls\": [],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"salvaje\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 12348,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"pet_test\"\n        },\n        \"name\": \"doggie_test\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"doggie_test\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 64,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"tag\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 1983,\n        \"category\": {\n            \"id\": 1,\n            \"name\": \"грызуны\"\n        },\n        \"name\": \"крыса\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 2,\n                \"name\": \"бурундук\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 78730,\n        \"category\": {\n            \"id\": 1,\n            \"name\": \"Cat\"\n        },\n        \"name\": \"Snowwhite\",\n        \"photoUrls\": [\n            \"\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 101,\n                \"name\": \"Snowwhite\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 901,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 94109,\n        \"name\": \"gatopardo\",\n        \"photoUrls\": [],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"gato\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 833142,\n        \"name\": \"tigre\",\n        \"photoUrls\": [],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"salvaje\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 325597,\n        \"name\": \"gatopardo\",\n        \"photoUrls\": [],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"gato\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 660091,\n        \"name\": \"tigre\",\n        \"photoUrls\": [],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"salvaje\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 781679,\n        \"name\": \"tigre\",\n        \"photoUrls\": [],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"salvaje\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 466,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"Dog\"\n        },\n        \"name\": \"Benedict\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"tag1\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 75,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"Dog\"\n        },\n        \"name\": \"Maymie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"tag1\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 460,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"Dog\"\n        },\n        \"name\": \"Devonte\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"tag1\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 437264,\n        \"name\": \"gatopardo\",\n        \"photoUrls\": [],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"gato\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 875221,\n        \"name\": \"tigre\",\n        \"photoUrls\": [],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"salvaje\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 72889,\n        \"name\": \"tigre\",\n        \"photoUrls\": [],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"salvaje\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9222968140491042131,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 3072021,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"bird\"\n        },\n        \"name\": \"birdie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854022352,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"sophia new\"\n        },\n        \"name\": \"cat new\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 61302,\n        \"category\": {\n            \"id\": 78902,\n            \"name\": \"string\"\n        },\n        \"name\": \"scooby\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 4444,\n        \"category\": {\n            \"id\": 5,\n            \"name\": \"cat\"\n        },\n        \"name\": \"Barsik\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 71,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"tag\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 12,\n        \"category\": {\n            \"id\": 1,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 1,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 112121212121,\n        \"category\": {\n            \"id\": 2,\n            \"name\": \"Tommy12\"\n        },\n        \"name\": \"doggie1\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"Jack1y\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 614,\n        \"category\": {\n            \"id\": 974,\n            \"name\": \"dog\"\n        },\n        \"name\": \"Esta\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 974,\n                \"name\": \"foxterrier\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 412,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"photoUrls\": [\n            \"link\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 188,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"Chałka123\"\n        },\n        \"name\": \"kot\",\n        \"photoUrls\": [\n            \"catfoto2\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"Chałka222\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 7299,\n        \"category\": {\n            \"id\": 2,\n            \"name\": \"Reptiles\"\n        },\n        \"name\": \"Oliver436\",\n        \"photoUrls\": [\n            \"https://petstore.com/images/bird3.jpg\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 4,\n                \"name\": \"Happy\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 234,\n        \"category\": {\n            \"id\": 1,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggie test\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 1125,\n        \"category\": {\n            \"id\": 1126,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 1127,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 14,\n        \"category\": {\n            \"id\": 1,\n            \"name\": \"lebrador\"\n        },\n        \"name\": \"tom\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 1,\n                \"name\": \"simple\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 78731,\n        \"category\": {\n            \"id\": 2,\n            \"name\": \"Dog\"\n        },\n        \"name\": \"Bruno\",\n        \"photoUrls\": [\n            \"\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 202,\n                \"name\": \"Bruno\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 500,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"lab\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 2500,\n                \"name\": \"lab\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9,\n        \"name\": \"chedder-89811222\",\n        \"photoUrls\": [\n            \"./dog.png\"\n        ],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 1234,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"rajju\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 222,\n        \"category\": {\n            \"id\": 345,\n            \"name\": \"SRAVANTHI\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"https://hips.hearstapps.com/hmg-prod/images/dog-puppy-on-garden-royalty-free-image-1586966191.jpg?crop=0.752xw:1.00xh;0.175xw,0&resize=1200:*\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 45,\n                \"name\": \"CHINTU\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 585555,\n        \"category\": {\n            \"id\": 50,\n            \"name\": \"cat\"\n        },\n        \"name\": \"ammy\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 50,\n                \"name\": \"white\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 20,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggie20\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 189,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"Lumia\"\n        },\n        \"name\": \"kot\",\n        \"photoUrls\": [\n            \"catfoto\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"Lumia\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 35,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"tag\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 5271,\n        \"name\": \"tigreton\",\n        \"photoUrls\": [],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 1749,\n        \"name\": \"gatito\",\n        \"photoUrls\": [],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775001,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 9223372036854775000,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 1163,\n        \"name\": \"gatito\",\n        \"photoUrls\": [],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 31345677,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"doggie\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 1245,\n        \"category\": {\n            \"id\": 1245,\n            \"name\": \"xyz\"\n        },\n        \"name\": \"xyz\",\n        \"photoUrls\": [\n            \"test\"\n        ],\n        \"tags\": [],\n        \"status\": \"available\"\n    },\n    {\n        \"id\": 608,\n        \"category\": {\n            \"id\": 0,\n            \"name\": \"string\"\n        },\n        \"name\": \"GatlingPet\",\n        \"photoUrls\": [\n            \"string\"\n        ],\n        \"tags\": [\n            {\n                \"id\": 0,\n                \"name\": \"string\"\n            }\n        ],\n        \"status\": \"available\"\n    }\n]"
						}
					]
				},
				{
					"name": "Update Pet",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//Generate random ID\r",
									"function generateRandomId() {\r",
									"    return Math.floor(Math.random() * 10) + 1;\r",
									"}\r",
									"\r",
									"//Generate random category\r",
									"function getRandomPetCategory() {\r",
									"    const categories = ['Dogs', 'Cats', 'Birds', 'Fish', 'Reptiles', 'Small Pets', 'Accessories', 'Food', 'Toys', 'Health Care'];\r",
									"    const randomIndex = Math.floor(Math.random() * categories.length);\r",
									"    return categories[randomIndex];\r",
									"}\r",
									"pm.collectionVariables.set(\"categoryID\",generateRandomId());\r",
									"pm.collectionVariables.set(\"category\",getRandomPetCategory());\r",
									"\r",
									"//Generate random pet name\r",
									"function getRandomPetName() {\r",
									"    const petNames = ['Bella', 'Charlie', 'Max', 'Luna', 'Rocky', 'Buddy', 'Milo', 'Coco', 'Daisy', 'Oliver'];\r",
									"    const randomName = petNames[Math.floor(Math.random() * petNames.length)];\r",
									"    const randomNumber = Math.floor(Math.random() * 1000) + 1; // number between 1–1000\r",
									"    return `${randomName}${randomNumber}`;\r",
									"}\r",
									"pm.collectionVariables.set(\"petName\",getRandomPetName());\r",
									"\r",
									"//Generste random photo url\r",
									"function getRandomPetPhotoUrl() {\r",
									"    const fileNames = ['dog1.jpg', 'cat2.jpg', 'bird3.jpg', 'fish4.jpg', 'hamster5.jpg'];\r",
									"    const randomFile = fileNames[Math.floor(Math.random() * fileNames.length)];\r",
									"    return `https://petstore.com/images/${randomFile}`;\r",
									"}\r",
									"pm.collectionVariables.set(\"photoUrl\",getRandomPetPhotoUrl());"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Checking the status code\r",
									"pm.test(\"Check that status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"//Checking the response time\r",
									"pm.test(\"Check that response time is less than 3000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"//Checking the response schema\r",
									"pm.test(\"Check that the response schema is valid\", function () {\r",
									"    const schema = {\r",
									"  \"id\": \"integer\",\r",
									"  \"category\": {\r",
									"    \"id\": \"integer\",\r",
									"    \"name\": \"string\"\r",
									"  },\r",
									"  \"name\": \"string\",\r",
									"  \"photoUrls\": [\"string\"],\r",
									"  \"tags\": [\r",
									"    {\r",
									"      \"id\": \"integer\",\r",
									"      \"name\": \"string\"\r",
									"    }\r",
									"  ],\r",
									"  \"status\": \"string\"\r",
									"}\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"//Expected Data\r",
									"var jsonData = pm.response.json();\r",
									"var expectedID = pm.collectionVariables.get(\"petID\");\r",
									"var expectedCategoryID = pm.collectionVariables.get(\"categoryID\");\r",
									"var expectedCategoryName = pm.collectionVariables.get(\"category\");\r",
									"var expectedPetName = pm.collectionVariables.get(\"petName\");\r",
									"var expectedPhotoUrl = pm.collectionVariables.get(\"photoUrl\");\r",
									"\r",
									"//Checking the id of the pet in the response\r",
									"pm.test(\"Check that the response contains correct ID\", function () {\r",
									"    pm.expect(jsonData.id).to.equal(expectedID);\r",
									"});\r",
									"\r",
									"//Checking the category of the pet in the response\r",
									"pm.test(\"Check that the response contains correct category data\", function () {\r",
									"    pm.expect(jsonData.category.id).to.equal(expectedCategoryID);\r",
									"    pm.expect(jsonData.category.name).to.equal(expectedCategoryName);\r",
									"});\r",
									"\r",
									"//Checking the the pet's name in the response\r",
									"pm.test(\"Check that the response contains correct pet's name\", function () {\r",
									"    pm.expect(jsonData.name).to.equal(expectedPetName);\r",
									"});\r",
									"\r",
									"//Checking the pet's photo URL in the response\r",
									"pm.test(\"Check that the response contains correct photo URL\", function () {\r",
									"    pm.expect(jsonData.photoUrls[0]).to.equal(expectedPhotoUrl);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": {{petID}},\n  \"category\": {\n    \"id\": {{categoryID}},\n    \"name\": \"{{category}}\"\n  },\n  \"name\": \"{{petName}}\",\n  \"photoUrls\": [\n    \"{{photoUrl}}\"\n  ],\n  \"tags\": [\n    {\n      \"id\": {{tagID}},\n      \"name\": \"{{tag}}\"\n    }\n  ],\n  \"status\": \"{{petStatus}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/pet",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"pet"
							]
						},
						"description": "This endpoint allows you to update the details of an existing pet in the system.\n\n### Request\n\n- Method: `Put`\n    \n- URL: `https://petstore.swagger.io/v2/pet`\n    \n- Request Body: You can update any of the following fields as needed:\n    \n    - `id` (number, optional): The unique ID of the pet.\n        \n    - `category` (object, optional): The category the pet belongs to.  \n         - `id` (number): The unique ID of the category.  \n         - `name` (string): The name of the category.\n        \n    - `name` (string, optional): The name of the pet.\n        \n    - `photoUrls` (array of strings, optional): A list of photo URLs for the pet.\n        \n    - `tags` (array of objects): Tags associated with the pet.  \n         - `id` (number): The unique ID of the tag.  \n         - `name` (string): The name of the tag.\n        \n    - `status` (string): The status of the pet in the store (available, pending, sold).\n        \n\n### Response\n\nThe response will include the updated details of the pet, including its ID, category, name, photo URLs, tags, and status."
					},
					"response": [
						{
							"name": "Update Pet",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": 7299,\n    \"category\": {\n        \"id\": 2,\n        \"name\": \"Reptiles\"\n    },\n    \"name\": \"Oliver436\",\n    \"photoUrls\": [\n        \"https://petstore.com/images/bird3.jpg\"\n    ],\n    \"tags\": [\n        {\n            \"id\": 4,\n            \"name\": \"Happy\"\n        }\n    ],\n    \"status\": \"available\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://petstore.swagger.io/v2/pet",
									"protocol": "https",
									"host": [
										"petstore",
										"swagger",
										"io"
									],
									"path": [
										"v2",
										"pet"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sat, 03 May 2025 19:09:34 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET, POST, DELETE, PUT"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type, api_key, Authorization"
								},
								{
									"key": "Server",
									"value": "Jetty(9.2.9.v20150224)"
								}
							],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": "{\n    \"id\": 7299,\n    \"category\": {\n        \"id\": 2,\n        \"name\": \"Reptiles\"\n    },\n    \"name\": \"Oliver436\",\n    \"photoUrls\": [\n        \"https://petstore.com/images/bird3.jpg\"\n    ],\n    \"tags\": [\n        {\n            \"id\": 4,\n            \"name\": \"Happy\"\n        }\n    ],\n    \"status\": \"available\"\n}"
						}
					]
				},
				{
					"name": "Find Pet After Update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Checking the status code\r",
									"pm.test(\"Check that status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"//Checking the response time\r",
									"pm.test(\"Check that response time is less than 3000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"//Checking the response schema\r",
									"pm.test(\"Check that the response schema is valid\", function () {\r",
									"    const schema = {\r",
									"    type: \"object\",\r",
									"    properties: {\r",
									"        id: { type: \"integer\" },\r",
									"        category: {\r",
									"            type: \"object\",\r",
									"            properties: {\r",
									"                id: { type: \"integer\" },\r",
									"                name: { type: \"string\" }\r",
									"            },\r",
									"            required: [\"id\", \"name\"]  // Ensure both id and name are required in category\r",
									"        },\r",
									"        name: { type: \"string\" },\r",
									"        photoUrls: {\r",
									"            type: \"array\",\r",
									"            items: { type: \"string\" }  // photoUrls is an array of strings\r",
									"        },\r",
									"        tags: {\r",
									"            type: \"array\",\r",
									"            items: {\r",
									"                type: \"object\",\r",
									"                properties: {\r",
									"                    id: { type: \"integer\" },\r",
									"                    name: { type: \"string\" }\r",
									"                },\r",
									"                required: [\"id\", \"name\"]  // Ensure both id and name are required in tags\r",
									"            }\r",
									"        },\r",
									"        status: { type: \"string\" }\r",
									"    },\r",
									"    required: [\"id\", \"category\", \"name\", \"photoUrls\", \"tags\", \"status\"]  // Make sure these fields are required in the main object\r",
									"};\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"//Expected Data\r",
									"var jsonData = pm.response.json();\r",
									"var expectedCategoryID = pm.collectionVariables.get(\"categoryID\");\r",
									"var expectedCategoryName = pm.collectionVariables.get(\"category\");\r",
									"var expectedPetName = pm.collectionVariables.get(\"petName\");\r",
									"var expectedPhotoUrl = pm.collectionVariables.get(\"photoUrl\");\r",
									"\r",
									"//Checking the category of the pet in the response\r",
									"pm.test(\"Check that the updated pet’s category is correct\", function () {\r",
									"    pm.expect(jsonData.category.id).to.equal(expectedCategoryID);\r",
									"    pm.expect(jsonData.category.name).to.equal(expectedCategoryName);\r",
									"});\r",
									"\r",
									"//Checking the the pet's name in the response\r",
									"pm.test(\"Check that the updated pet’s name is correct\", function () {\r",
									"    pm.expect(jsonData.name).to.equal(expectedPetName);\r",
									"});\r",
									"\r",
									"//Checking the pet's photo URL in the response\r",
									"pm.test(\"Check that the updated pet’s photo URL is correct\", function () {\r",
									"    pm.expect(jsonData.photoUrls[0]).to.equal(expectedPhotoUrl);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/pet/{{petID}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"pet",
								"{{petID}}"
							]
						},
						"description": "This endpoint allows you to retrieve the details of a pet after it has been updated, using its ID.\n\n#### Request\n\n- Method: `GET`\n    \n- URL: `{{base_url}}/pet/{{petID}}`\n    \n- Headers:\n    \n    - `accept: application/json`\n        \n\n#### Response\n\nThe response will include the details of the updated pet, including its ID, category, name, photo URLs, tags, and status."
					},
					"response": []
				},
				{
					"name": "Update Pet Using Form",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//Generate random pet name\r",
									"function getRandomPetName() {\r",
									"    const petNames = ['Bella', 'Charlie', 'Max', 'Luna', 'Rocky', 'Buddy', 'Milo', 'Coco', 'Daisy', 'Oliver'];\r",
									"    const randomName = petNames[Math.floor(Math.random() * petNames.length)];\r",
									"    const randomNumber = Math.floor(Math.random() * 1000) + 1; // number between 1–1000\r",
									"    return `${randomName}${randomNumber}`;\r",
									"}\r",
									"pm.collectionVariables.set(\"petName\",getRandomPetName());\r",
									"\r",
									"//Generate random status\r",
									"function getRandomPetStatus() {\r",
									"    const statuses = ['available', 'pending', 'sold'];\r",
									"    const randomStatus = statuses[Math.floor(Math.random() * statuses.length)];\r",
									"    return randomStatus;\r",
									"}\r",
									"pm.collectionVariables.set(\"petStatus\",getRandomPetStatus());"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Checking the status code\r",
									"pm.test(\"Check that status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"//Checking the response time\r",
									"pm.test(\"Check that response time is less than 3000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"value": "{{petName}}",
									"type": "text"
								},
								{
									"key": "status",
									"value": "{{petStatus}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/pet/{{petID}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"pet",
								"{{petID}}"
							]
						},
						"description": "This endpoint allows the user to perform a POST request to update a pet's information.\n\n#### Request\n\n- Method: `Post`\n    \n- URL: `https://petstore.swagger.io/v2/pet/{{petID}}`\n    \n- Request Body: You can update name or status fields as needed: The request should include the following parameters in x-www-form-urlencoded format:\n    \n- `name` (text, optional): The name of the pet.\n    \n- `status` (text, optional): The status of the pet in the store (available, pending, sold).\n    \n\n#### Response\n\nThe response will be in JSON format with the following schema:\n\n- `code` (number): The status code of the response.\n    \n- `type` (string): The type of response.\n    \n- `message` (string): The message included in the response."
					},
					"response": [
						{
							"name": "Update Pet Using Form",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "name",
											"value": "Daisy110",
											"type": "text"
										},
										{
											"key": "status",
											"value": "pending",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "https://petstore.swagger.io/v2/pet/7299",
									"protocol": "https",
									"host": [
										"petstore",
										"swagger",
										"io"
									],
									"path": [
										"v2",
										"pet",
										"7299"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sat, 03 May 2025 19:30:38 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET, POST, DELETE, PUT"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type, api_key, Authorization"
								},
								{
									"key": "Server",
									"value": "Jetty(9.2.9.v20150224)"
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 200,\n    \"type\": \"unknown\",\n    \"message\": \"7299\"\n}"
						}
					]
				},
				{
					"name": "Find Pet After Form Update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Checking the status code\r",
									"pm.test(\"Check that status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"//Checking the response time\r",
									"pm.test(\"Check that response time is less than 3000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"//Checking the response schema\r",
									"pm.test(\"Check that the response schema is valid\", function () {\r",
									"    const schema = {\r",
									"    type: \"object\",\r",
									"    properties: {\r",
									"        id: { type: \"integer\" },\r",
									"        category: {\r",
									"            type: \"object\",\r",
									"            properties: {\r",
									"                id: { type: \"integer\" },\r",
									"                name: { type: \"string\" }\r",
									"            },\r",
									"            required: [\"id\", \"name\"]  // Ensure both id and name are required in category\r",
									"        },\r",
									"        name: { type: \"string\" },\r",
									"        photoUrls: {\r",
									"            type: \"array\",\r",
									"            items: { type: \"string\" }  // photoUrls is an array of strings\r",
									"        },\r",
									"        tags: {\r",
									"            type: \"array\",\r",
									"            items: {\r",
									"                type: \"object\",\r",
									"                properties: {\r",
									"                    id: { type: \"integer\" },\r",
									"                    name: { type: \"string\" }\r",
									"                },\r",
									"                required: [\"id\", \"name\"]  // Ensure both id and name are required in tags\r",
									"            }\r",
									"        },\r",
									"        status: { type: \"string\" }\r",
									"    },\r",
									"    required: [\"id\", \"category\", \"name\", \"photoUrls\", \"tags\", \"status\"]  // Make sure these fields are required in the main object\r",
									"};\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"//Expected Data\r",
									"var jsonData = pm.response.json();\r",
									"var expectedPetName = pm.collectionVariables.get(\"petName\");\r",
									"var expectedStatus = pm.collectionVariables.get(\"petStatus\");\r",
									"\r",
									"//Checking the the pet's name in the response\r",
									"pm.test(\"Check that the updated pet’s name is correct\", function () {\r",
									"    pm.expect(jsonData.name).to.equal(expectedPetName);\r",
									"});\r",
									"\r",
									"//Checking the pet's status in the response\r",
									"pm.test(\"Check that the updated pet’s status is correct\", function () {\r",
									"    pm.expect(jsonData.status).to.equal(expectedStatus);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/pet/{{petID}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"pet",
								"{{petID}}"
							]
						},
						"description": "This endpoint allows you to retrieve the details of a pet after it has been updated, using its ID.\n\n#### Request\n\n- Method: `GET`\n    \n- URL: `{{base_url}}/pet/{{petID}}`\n    \n- Headers:\n    \n    - `accept: application/json`\n        \n\n#### Response\n\nThe response will include the details of the updated pet, including its ID, category, name, photo URLs, tags, and status."
					},
					"response": []
				},
				{
					"name": "Delete Pet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Checking the status code\r",
									"pm.test(\"Check that status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"//Checking the response time\r",
									"pm.test(\"Check that response time is less than 3000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"//Checking the message value\r",
									"pm.test(\"Check that message value is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var expectedMessage = pm.collectionVariables.get(\"petID\").toString();\r",
									"    pm.expect(jsonData.message).to.eql(expectedMessage);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/pet/{{petID}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"pet",
								"{{petID}}"
							]
						},
						"description": "This endpoint is used to delete a specific pet by its ID.\n\n#### Request\n\n- Method: `Delete`\n    \n- URL: `{{base_url}}/pet/{{petID}}`\n    \n- `petID` (path parameter) : The ID of the pet to be deleted.\n    \n\n#### Response\n\n- `code` (number) : The status code of the response.\n    \n- `type` (string) : The type of the response.\n    \n- `message` (string) : A message indicating the result of the deletion."
					},
					"response": [
						{
							"name": "Delete Pet",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://petstore.swagger.io/v2/pet/7299",
									"protocol": "https",
									"host": [
										"petstore",
										"swagger",
										"io"
									],
									"path": [
										"v2",
										"pet",
										"7299"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sat, 03 May 2025 19:39:24 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET, POST, DELETE, PUT"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type, api_key, Authorization"
								},
								{
									"key": "Server",
									"value": "Jetty(9.2.9.v20150224)"
								}
							],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": "{\n    \"code\": 200,\n    \"type\": \"unknown\",\n    \"message\": \"7299\"\n}"
						}
					]
				},
				{
					"name": "Find Pet After Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Checking the status code\r",
									"pm.test(\"Check that status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"//Checking the response time\r",
									"pm.test(\"Check that response time is less than 3000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"//Checking the error message\r",
									"pm.test(\"Check that error message is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Pet not found\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/pet/{{petID}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"pet",
								"{{petID}}"
							]
						},
						"description": "This endpoint tries to retrieve the details of a pet based on the provided `petID`.  \nNote: If the pet has been deleted, it will return an error or indicate that the pet is not found.\n\n#### Request\n\nMethod: `GET`  \nURL: `{{base_url}}/pet/{{petID}}`\n\n**Headers:**  \n`accept: application/json`\n\n#### Response\n\n- `code` (number): The error code.\n    \n- `type` (string): The type of error.\n    \n- `message` (string): The error message."
					},
					"response": [
						{
							"name": "Find Pet After Delete",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://petstore.swagger.io/v2/pet/7299",
									"protocol": "https",
									"host": [
										"petstore",
										"swagger",
										"io"
									],
									"path": [
										"v2",
										"pet",
										"7299"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sat, 03 May 2025 19:43:18 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET, POST, DELETE, PUT"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type, api_key, Authorization"
								},
								{
									"key": "Server",
									"value": "Jetty(9.2.9.v20150224)"
								}
							],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": "{\n    \"code\": 1,\n    \"type\": \"error\",\n    \"message\": \"Pet not found\"\n}"
						}
					]
				}
			],
			"description": "> _**This folder contains requests to manage pets in the store, including adding, updating, finding, and deleting pets.**_"
		},
		{
			"name": "Store",
			"item": [
				{
					"name": "Place Order",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//Genrate random pet ID\r",
									"function generateRandomOrderId() {\r",
									"    return Math.floor(Math.random() * 1000) + 1;\r",
									"}\r",
									"pm.collectionVariables.set(\"orderID\",generateRandomOrderId());\r",
									"\r",
									"//Genrate random quantity\r",
									"function generateRandomQuantity() {\r",
									"    return Math.floor(Math.random() * 10) + 1;\r",
									"}\r",
									"pm.collectionVariables.set(\"quantity\",generateRandomQuantity());\r",
									"\r",
									"//Genrate random ship date\r",
									"function getRandomISODate() {\r",
									"    const start = new Date(2020, 0, 1).getTime();  // Jan 1, 2020\r",
									"    const end = new Date().getTime();              // now\r",
									"    const randomTime = new Date(start + Math.random() * (end - start));\r",
									"    return randomTime.toISOString();\r",
									"}\r",
									"pm.collectionVariables.set(\"shipDate\",getRandomISODate());\r",
									"\r",
									"//Generate random status\r",
									"function getRandomStatus() {\r",
									"    const statuses = ['placed', 'approved', 'delivered'];\r",
									"    return statuses[Math.floor(Math.random() * statuses.length)];\r",
									"}\r",
									"pm.collectionVariables.set(\"orderStatus\",getRandomStatus());\r",
									"\r",
									"//Generate random state\r",
									"function getRandomComplete() {\r",
									"    return Math.random() < 0.5;  // returns true or false randomly\r",
									"}\r",
									"pm.collectionVariables.set(\"orderComplete\",getRandomComplete());"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Checking the status code\r",
									"pm.test(\"Check that status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"//Checking the response time\r",
									"pm.test(\"Check that response time is less than 3000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"//Checking the response schema\r",
									"pm.test(\"Check that the response schema is valid\", function () {\r",
									"    const schema = {\r",
									"    type: \"object\",\r",
									"    properties: {\r",
									"        id: { type: \"integer\" },\r",
									"        petId: { type: \"integer\" },\r",
									"        quantity: { type: \"integer\" },\r",
									"        shipDate: { type: \"string\", format: \"date-time\" }, // Ensure shipDate is in date-time format\r",
									"        status: { type: \"string\" },\r",
									"        complete: { type: \"boolean\" }\r",
									"    },\r",
									"    required: [\"id\", \"petId\", \"quantity\", \"shipDate\", \"status\", \"complete\"] // List required properties\r",
									"};\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"//Expected Data\r",
									"var jsonData = pm.response.json();\r",
									"var expectedID = pm.collectionVariables.get(\"orderID\");\r",
									"var expectedPetID = pm.collectionVariables.get(\"petID\");\r",
									"var expectedQuantity = pm.collectionVariables.get(\"quantity\");\r",
									"var expectedStatus = pm.collectionVariables.get(\"orderStatus\");\r",
									"var expectedComplete = pm.collectionVariables.get(\"orderComplete\");\r",
									"\r",
									"//Checking the id of the order in the response\r",
									"pm.test(\"Check that the response contains correct order ID\", function () {\r",
									"    pm.expect(jsonData.id).to.equal(expectedID);\r",
									"});\r",
									"\r",
									"// Check the pet ID of the order\r",
									"pm.test(\"Check that the response contains correct pet ID\", function () {\r",
									"    pm.expect(jsonData.petId).to.equal(expectedPetID);\r",
									"});\r",
									"\r",
									"// Check the quantity of the order\r",
									"pm.test(\"Check that the response contains correct quantity\", function () {\r",
									"    pm.expect(jsonData.quantity).to.equal(expectedQuantity);\r",
									"});\r",
									"\r",
									"// Check the status of the order\r",
									"pm.test(\"Check that the response contains correct order status\", function () {\r",
									"    pm.expect(jsonData.status).to.equal(expectedStatus);\r",
									"});\r",
									"\r",
									"// Check the complete flag of the order\r",
									"pm.test(\"Check that the response contains correct complete value\", function () {\r",
									"    pm.expect(jsonData.complete).to.equal(expectedComplete);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": {{orderID}},\n  \"petId\": {{petID}},\n  \"quantity\": {{quantity}},\n  \"shipDate\": \"{{shipDate}}\",\n  \"status\": \"{{orderStatus}}\",\n  \"complete\": {{orderComplete}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/store/order",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"store",
								"order"
							]
						},
						"description": "This endpoint allows the client to place a new order for a pet.\n\n#### Request\n\n- Method: `Post`\n    \n- URL: `https://petstore.swagger.io/v2/store/order`\n    \n- Request Body:\n    \n    - `id` (integer, required): The ID of the order.\n        \n    - `petId` (integer, required): The ID of the pet being ordered.\n        \n    - `quantity` (integer, required): The number of items to order.\n        \n    - `shipDate` (string, required): The date and time when the order is scheduled to ship (ISO 8601 format).\n        \n    - `status` (string, required): The status of the order (e.g., placed, approved, delivered).\n        \n    - `complete` (boolean, required): Indicates whether the order is complete.\n        \n\n#### Response\n\nUpon successful placement, the response will return the order details, including the order ID, pet ID, quantity, ship date, status, and completion status."
					},
					"response": [
						{
							"name": "Place Order",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": 377,\n    \"petId\": 8614,\n    \"quantity\": 8,\n    \"shipDate\": \"2022-01-30T20:18:03.694+0000\",\n    \"status\": \"delivered\",\n    \"complete\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://petstore.swagger.io/v2/store/order",
									"protocol": "https",
									"host": [
										"petstore",
										"swagger",
										"io"
									],
									"path": [
										"v2",
										"store",
										"order"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sat, 03 May 2025 19:53:42 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET, POST, DELETE, PUT"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type, api_key, Authorization"
								},
								{
									"key": "Server",
									"value": "Jetty(9.2.9.v20150224)"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 377,\n    \"petId\": 8614,\n    \"quantity\": 8,\n    \"shipDate\": \"2022-01-30T20:18:03.694+0000\",\n    \"status\": \"delivered\",\n    \"complete\": true\n}"
						}
					]
				},
				{
					"name": "Find Order By ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Checking the status code\r",
									"pm.test(\"Check that status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"//Checking the response time\r",
									"pm.test(\"Check that response time is less than 3000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"//Checking the response schema\r",
									"pm.test(\"Check that the response schema is valid\", function () {\r",
									"    const schema = {\r",
									"    type: \"object\",\r",
									"    properties: {\r",
									"        id: { type: \"integer\" },\r",
									"        petId: { type: \"integer\" },\r",
									"        quantity: { type: \"integer\" },\r",
									"        shipDate: { type: \"string\", format: \"date-time\" }, // Ensure shipDate is in date-time format\r",
									"        status: { type: \"string\" },\r",
									"        complete: { type: \"boolean\" }\r",
									"    },\r",
									"    required: [\"id\", \"petId\", \"quantity\", \"shipDate\", \"status\", \"complete\"] // List required properties\r",
									"};\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"//Expected Data\r",
									"var jsonData = pm.response.json();\r",
									"var expectedID = pm.collectionVariables.get(\"orderID\");\r",
									"var expectedPetID = pm.collectionVariables.get(\"petID\");\r",
									"var expectedQuantity = pm.collectionVariables.get(\"quantity\");\r",
									"var expectedStatus = pm.collectionVariables.get(\"orderStatus\");\r",
									"var expectedComplete = pm.collectionVariables.get(\"orderComplete\");\r",
									"\r",
									"//Checking the id of the order in the response\r",
									"pm.test(\"Check that the response contains correct order ID\", function () {\r",
									"    pm.expect(jsonData.id).to.equal(expectedID);\r",
									"});\r",
									"\r",
									"// Check the pet ID of the order\r",
									"pm.test(\"Check that the response contains correct pet ID\", function () {\r",
									"    pm.expect(jsonData.petId).to.equal(expectedPetID);\r",
									"});\r",
									"\r",
									"// Check the quantity of the order\r",
									"pm.test(\"Check that the response contains correct quantity\", function () {\r",
									"    pm.expect(jsonData.quantity).to.equal(expectedQuantity);\r",
									"});\r",
									"\r",
									"// Check the status of the order\r",
									"pm.test(\"Check that the response contains correct order status\", function () {\r",
									"    pm.expect(jsonData.status).to.equal(expectedStatus);\r",
									"});\r",
									"\r",
									"// Check the complete flag of the order\r",
									"pm.test(\"Check that the response contains correct complete value\", function () {\r",
									"    pm.expect(jsonData.complete).to.equal(expectedComplete);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"packages": {},
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/store/order/{{orderID}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"store",
								"order",
								"{{orderID}}"
							]
						},
						"description": "This endpoint retrieves the details of a specific order based on the provided order ID.\n\n#### Request\n\n- Method: GET\n    \n- URL: {{base_url}}/store/order/{{orderID}}\n    \n\n#### Response\n\nThe response body contains the details of the order, including the order ID, pet ID, quantity, ship date, status, and completion status."
					},
					"response": [
						{
							"name": "Find Order By ID",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://petstore.swagger.io/v2/store/order/377",
									"protocol": "https",
									"host": [
										"petstore",
										"swagger",
										"io"
									],
									"path": [
										"v2",
										"store",
										"order",
										"377"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sat, 03 May 2025 20:09:35 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET, POST, DELETE, PUT"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type, api_key, Authorization"
								},
								{
									"key": "Server",
									"value": "Jetty(9.2.9.v20150224)"
								}
							],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": "{\n    \"id\": 377,\n    \"petId\": 8614,\n    \"quantity\": 8,\n    \"shipDate\": \"2022-01-30T20:18:03.694+0000\",\n    \"status\": \"delivered\",\n    \"complete\": true\n}"
						}
					]
				},
				{
					"name": "Delete Order By ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Checking the status code\r",
									"pm.test(\"Check that status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"//Checking the response time\r",
									"pm.test(\"Check that response time is less than 3000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"//Checking the message value\r",
									"pm.test(\"Check that message value is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var expectedMessage = pm.collectionVariables.get(\"orderID\").toString();\r",
									"    pm.expect(jsonData.message).to.eql(expectedMessage);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/store/order/{{orderID}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"store",
								"order",
								"{{orderID}}"
							]
						},
						"description": "This endpoint is used to delete a specific order from the store.\n\n#### Request\n\n- Method: `Delete`\n    \n- URL: `{{base_url}}/store/order/{{orderID}}`\n    \n- `orderID` (path parameter) - The ID of the order to be deleted.\n    \n\n#### Response\n\nUpon successful deletion, the server responds with a status code of 200 and a JSON object with the following properties:\n\n- `code` (number) - Indicates the status of the operation.\n    \n- `type` (string) - Represents the type of the response.\n    \n- `message` (string) - Provides additional information about the response."
					},
					"response": [
						{
							"name": "Delete Order By ID",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://petstore.swagger.io/v2/store/order/377",
									"protocol": "https",
									"host": [
										"petstore",
										"swagger",
										"io"
									],
									"path": [
										"v2",
										"store",
										"order",
										"377"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sat, 03 May 2025 20:16:46 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET, POST, DELETE, PUT"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type, api_key, Authorization"
								},
								{
									"key": "Server",
									"value": "Jetty(9.2.9.v20150224)"
								}
							],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": "{\n    \"code\": 200,\n    \"type\": \"unknown\",\n    \"message\": \"377\"\n}"
						}
					]
				},
				{
					"name": "Find Order After Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Checking the status code\r",
									"pm.test(\"Check that status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"//Checking the response time\r",
									"pm.test(\"Check that response time is less than 3000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"//Checking the error message\r",
									"pm.test(\"Check that error message is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Order not found\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/store/order/{{orderID}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"store",
								"order",
								"{{orderID}}"
							]
						},
						"description": "This endpoint retrieves details of a specific order based on the provided order ID.\n\nNote: If the order has been deleted, it will return an error or indicate that the order is not found.\n\n#### Request\n\n- Method: GET\n    \n- URL: `{{base_url}}/store/order/{{orderID}}`\n    \n\n#### Response\n\n- `code` (number): The error code.\n    \n- `type` (string): The type of error.\n    \n- `message` (string): The error message."
					},
					"response": [
						{
							"name": "Find Order After Delete",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://petstore.swagger.io/v2/store/order/377",
									"protocol": "https",
									"host": [
										"petstore",
										"swagger",
										"io"
									],
									"path": [
										"v2",
										"store",
										"order",
										"377"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sat, 03 May 2025 20:24:36 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET, POST, DELETE, PUT"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type, api_key, Authorization"
								},
								{
									"key": "Server",
									"value": "Jetty(9.2.9.v20150224)"
								}
							],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": "{\n    \"code\": 1,\n    \"type\": \"error\",\n    \"message\": \"Order not found\"\n}"
						}
					]
				}
			],
			"description": "> _**This folder contains requests to place, retrieve, and delete store orders.**_"
		},
		{
			"name": "User",
			"item": [
				{
					"name": "Create User",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//Genrate random user ID\r",
									"function generateRandomUserId() {\r",
									"    return Math.floor(Math.random() * 1000) + 1;\r",
									"}\r",
									"pm.collectionVariables.set(\"userID\",generateRandomUserId());\r",
									"\r",
									"//Genrate random username\r",
									"function getRandomUsername() {\r",
									"    const randomNum = Math.floor(Math.random() * 10000);\r",
									"    return 'Abdelrahman_' + randomNum;\r",
									"}\r",
									"pm.collectionVariables.set(\"username\",getRandomUsername());\r",
									"\r",
									"//Genrate random firstname\r",
									"function getRandomFirstname() {\r",
									"    const randomNum = Math.floor(Math.random() * 10000);\r",
									"    return 'Abdelrahman' + randomNum;\r",
									"}\r",
									"pm.collectionVariables.set(\"firstName\",getRandomFirstname());\r",
									"\r",
									"//Genrate random lastname\r",
									"function getRandomLastname() {\r",
									"    const randomNum = Math.floor(Math.random() * 10000);\r",
									"    return 'Fahmy' + randomNum;\r",
									"}\r",
									"pm.collectionVariables.set(\"lastName\",getRandomLastname());\r",
									"\r",
									"//Genrate random email\r",
									"function getRandomEmail() {\r",
									"    const randomStr = Math.floor(Math.random() * 10000);\r",
									"    return 'user_' + randomStr + '@example.com';\r",
									"}\r",
									"pm.collectionVariables.set(\"email\",getRandomEmail());\r",
									"\r",
									"//Genrate random password\r",
									"function getRandomPassword(length = 10) {\r",
									"    const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()';\r",
									"    let password = '';\r",
									"    for (let i = 0; i < length; i++) {\r",
									"        password += chars.charAt(Math.floor(Math.random() * chars.length));\r",
									"    }\r",
									"    return password;\r",
									"}\r",
									"pm.collectionVariables.set(\"password\",getRandomPassword());\r",
									"\r",
									"//Genrate random phone number\r",
									"function getRandomPhoneNumber() {\r",
									"    const middle = Math.floor(1000 + Math.random() * 9000);  // 4 digits\r",
									"    const last = Math.floor(100000 + Math.random() * 900000); // 6 digits\r",
									"    return `+447${middle}${last}`;\r",
									"}\r",
									"pm.collectionVariables.set(\"phone\",getRandomPhoneNumber());\r",
									"\r",
									"//Generate random user status\r",
									"function getRandomUserStatus() {\r",
									"    return Math.floor(Math.random() * 6);  // gives 0,1,2,3,4,5\r",
									"}\r",
									"pm.collectionVariables.set(\"userStatus\",getRandomUserStatus());"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Checking the status code\r",
									"pm.test(\"Check that status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"//Checking the response time\r",
									"pm.test(\"Check that response time is less than 3000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"//Checking the message value\r",
									"pm.test(\"Check that message value is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var expectedMessage = pm.collectionVariables.get(\"userID\").toString();\r",
									"    pm.expect(jsonData.message).to.eql(expectedMessage);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": {{userID}},\n  \"username\": \"{{username}}\",\n  \"firstName\": \"{{firstName}}\",\n  \"lastName\": \"{{lastName}}\",\n  \"email\": \"{{email}}\",\n  \"password\": \"{{password}}\",\n  \"phone\": \"{{phone}}\",\n  \"userStatus\": {{userStatus}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user"
							]
						},
						"description": "This endpoint allows you to create a new user using an HTTP POST request to {{base_url}}/user.\n\n### Request\n\n- Method: `Post`\n    \n- URL: `https://petstore.swagger.io/user`\n    \n- Request Body:\n    \n    - `id`: The ID of the user to be created.\n        \n    - `username` (string, required): The username for the new user.\n        \n    - `firstName` (string, required): The first name of the user.\n        \n    - `lastName` (string, required): The last name of the user.\n        \n    - `email` (string, required): The email address of the user.\n        \n    - `password` (string, required): The password for the user account.\n        \n    - `phone` (string, optional): The phone number of the user.\n        \n    - `userStatus` (integer, required): The status of the user.\n        \n\n### Response\n\nUpon successful execution, the endpoint returns a JSON response with the following fields:\n\n- `code`: A numeric code indicating the status of the request.\n    \n- `type`: A string indicating the type of the response.\n    \n- `message`: A string providing additional information about the response."
					},
					"response": [
						{
							"name": "Create User",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": 325,\n  \"username\": \"Abdelrahman_3430\",\n  \"firstName\": \"Abdelrahman7978\",\n  \"lastName\": \"Fahmy7645\",\n  \"email\": \"user_5711@example.com\",\n  \"password\": \"!Qws67FNw(\",\n  \"phone\": \"+4473197180023\",\n  \"userStatus\": 5\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://petstore.swagger.io/v2/user",
									"protocol": "https",
									"host": [
										"petstore",
										"swagger",
										"io"
									],
									"path": [
										"v2",
										"user"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sat, 03 May 2025 20:44:10 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET, POST, DELETE, PUT"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type, api_key, Authorization"
								},
								{
									"key": "Server",
									"value": "Jetty(9.2.9.v20150224)"
								}
							],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": "{\n    \"code\": 200,\n    \"type\": \"unknown\",\n    \"message\": \"325\"\n}"
						}
					]
				},
				{
					"name": "Get User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Checking the status code\r",
									"pm.test(\"Check that status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"//Checking the response time\r",
									"pm.test(\"Check that response time is less than 3000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"//Checking the response schema\r",
									"pm.test(\"Check that the response schema is valid\", function () {\r",
									"    const schema = {\r",
									"        type: \"object\",\r",
									"        properties: {\r",
									"            id: { type: \"integer\" },\r",
									"            username: { type: \"string\" },\r",
									"            firstName: { type: \"string\" },\r",
									"            lastName: { type: \"string\" },\r",
									"            email: { type: \"string\" },\r",
									"            password: { type: \"string\" },\r",
									"            phone: { type: \"string\" },\r",
									"            userStatus: { type: \"integer\" }\r",
									"        },\r",
									"        required: [\"id\", \"username\", \"firstName\", \"lastName\", \"email\", \"password\", \"phone\", \"userStatus\"]\r",
									"    };\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"//Expected Data\r",
									"var jsonData = pm.response.json();\r",
									"var expectedID = pm.collectionVariables.get(\"userID\");\r",
									"var expectedUsername = pm.collectionVariables.get(\"username\");\r",
									"var expectedFirstName = pm.collectionVariables.get(\"firstName\");\r",
									"var expectedLastName = pm.collectionVariables.get(\"lastName\");\r",
									"var expectedEmail = pm.collectionVariables.get(\"email\");\r",
									"var expectedPassword = pm.collectionVariables.get(\"password\");\r",
									"var expectedPhone = pm.collectionVariables.get(\"phone\");\r",
									"var expectedUserStatus = pm.collectionVariables.get(\"userStatus\");\r",
									"\r",
									"//Checking the id of user in the response\r",
									"pm.test(\"Check that the response contains correct user ID\", function () {\r",
									"    pm.expect(jsonData.id).to.equal(expectedID);\r",
									"});\r",
									"\r",
									"//Checking the username of user in the response\r",
									"pm.test(\"Check that the response contains correct username\", function () {\r",
									"    pm.expect(jsonData.username).to.equal(expectedUsername);\r",
									"});\r",
									"\r",
									"//Checking the first name of user in the response\r",
									"pm.test(\"Check that the response contains correct first name\", function () {\r",
									"    pm.expect(jsonData.firstName).to.equal(expectedFirstName);\r",
									"});\r",
									"\r",
									"//Checking the last name of user in the response\r",
									"pm.test(\"Check that the response contains correct last name\", function () {\r",
									"    pm.expect(jsonData.lastName).to.equal(expectedLastName);\r",
									"});\r",
									"\r",
									"//Checking the email of user in the response\r",
									"pm.test(\"Check that the response contains correct email\", function () {\r",
									"    pm.expect(jsonData.email).to.equal(expectedEmail);\r",
									"});\r",
									"\r",
									"//Checking the password of user in the response\r",
									"pm.test(\"Check that the response contains correct password\", function () {\r",
									"    pm.expect(jsonData.password).to.equal(expectedPassword);\r",
									"});\r",
									"\r",
									"//Checking the phone number of user in the response\r",
									"pm.test(\"Check that the response contains correct phone number\", function () {\r",
									"    pm.expect(jsonData.phone).to.equal(expectedPhone);\r",
									"});\r",
									"\r",
									"//Checking the user status in the response\r",
									"pm.test(\"Check that the response contains correct user status\", function () {\r",
									"    pm.expect(jsonData.userStatus).to.equal(expectedUserStatus);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/user/{{username}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"{{username}}"
							]
						},
						"description": "This endpoint retrieves user information based on the provided username.\n\n#### Request\n\n- Method: `GET`\n    \n- URL: {{base_url}}/user/{{username}}\n    \n- `username` (path parameter) - The username of the user for whom the information is to be retrieved.\n    \n\n#### Response\n\nThe response will be a JSON object with the following properties:\n\n- `id` (number) - The unique identifier of the user.\n    \n- `username` (string) - The username of the user.\n    \n- `firstName` (string) - The first name of the user.\n    \n- `lastName` (string) - The last name of the user.\n    \n- `email` (string) - The email address of the user.\n    \n- `password` (string) - The password of the user.\n    \n- `phone` (string) - The phone number of the user.\n    \n- `userStatus` (number) - The status of the user."
					},
					"response": [
						{
							"name": "Get User",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://petstore.swagger.io/v2/user/Abdelrahman_3430",
									"protocol": "https",
									"host": [
										"petstore",
										"swagger",
										"io"
									],
									"path": [
										"v2",
										"user",
										"Abdelrahman_3430"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sat, 03 May 2025 21:14:56 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET, POST, DELETE, PUT"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type, api_key, Authorization"
								},
								{
									"key": "Server",
									"value": "Jetty(9.2.9.v20150224)"
								}
							],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": "{\n    \"id\": 325,\n    \"username\": \"Abdelrahman_3430\",\n    \"firstName\": \"Abdelrahman7978\",\n    \"lastName\": \"Fahmy7645\",\n    \"email\": \"user_5711@example.com\",\n    \"password\": \"!Qws67FNw(\",\n    \"phone\": \"+4473197180023\",\n    \"userStatus\": 5\n}"
						}
					]
				},
				{
					"name": "Update User",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//Genrate random username\r",
									"function getRandomUsername() {\r",
									"    const randomNum = Math.floor(Math.random() * 10000);\r",
									"    return 'Abdelrahman_' + randomNum;\r",
									"}\r",
									"pm.collectionVariables.set(\"username\",getRandomUsername());\r",
									"\r",
									"//Genrate random email\r",
									"function getRandomEmail() {\r",
									"    const randomStr = Math.floor(Math.random() * 10000);\r",
									"    return 'user_' + randomStr + '@example.com';\r",
									"}\r",
									"pm.collectionVariables.set(\"email\",getRandomEmail());\r",
									"\r",
									"//Genrate random password\r",
									"function getRandomPassword(length = 10) {\r",
									"    const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()';\r",
									"    let password = '';\r",
									"    for (let i = 0; i < length; i++) {\r",
									"        password += chars.charAt(Math.floor(Math.random() * chars.length));\r",
									"    }\r",
									"    return password;\r",
									"}\r",
									"pm.collectionVariables.set(\"password\",getRandomPassword());\r",
									"\r",
									"//Genrate random phone number\r",
									"function getRandomPhoneNumber() {\r",
									"    const middle = Math.floor(1000 + Math.random() * 9000);  // 4 digits\r",
									"    const last = Math.floor(100000 + Math.random() * 900000); // 6 digits\r",
									"    return `+447${middle}${last}`;\r",
									"}\r",
									"pm.collectionVariables.set(\"phone\",getRandomPhoneNumber());"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Checking the status code\r",
									"pm.test(\"Check that status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"//Checking the response time\r",
									"pm.test(\"Check that response time is less than 3000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"//Checking the message value\r",
									"pm.test(\"Check that message value is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var expectedMessage = pm.collectionVariables.get(\"userID\").toString();\r",
									"    pm.expect(jsonData.message).to.eql(expectedMessage);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": {{userID}},\n  \"username\": \"{{username}}\",\n  \"firstName\": \"{{firstName}}\",\n  \"lastName\": \"{{lastName}}\",\n  \"email\": \"{{email}}\",\n  \"password\": \"{{password}}\",\n  \"phone\": \"{{phone}}\",\n  \"userStatus\": {{userStatus}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user/{{username}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"{{username}}"
							]
						},
						"description": "This request updates a specific user's information by using the username in the URL. The request must include a payload in the raw request body, containing the user's ID and updated details.\n\n### Request\n\n- Method: `Put`\n    \n- URL: `https://petstore.swagger.io/user/{{username}}`\n    \n- Request Body:\n    \n    - `id`: The ID of the user to be created.\n        \n    - `username` (string, required): The username for the new user.\n        \n    - `firstName` (string, required): The first name of the user.\n        \n    - `lastName` (string, required): The last name of the user.\n        \n    - `email` (string, required): The email address of the user.\n        \n    - `password` (string, required): The password for the user account.\n        \n    - `phone` (string, optional): The phone number of the user.\n        \n    - `userStatus` (integer, required): The status of the user.\n        \n\n### Response\n\nUpon successful execution, the response will have a status code of 200 and a JSON content type. The response body will contain the following fields:\n\n- code: (number) A code indicating the result of the operation.\n    \n- type: (string) Type of the message.\n    \n- message: (string) A message providing additional information about the operation."
					},
					"response": [
						{
							"name": "Update User",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": 325,\n  \"username\": \"{{username}}\",\n  \"firstName\": \"{{firstName}}\",\n  \"lastName\": \"{{lastName}}\",\n  \"email\": \"{{email}}\",\n  \"password\": \"{{password}}\",\n  \"phone\": \"{{phone}}\",\n  \"userStatus\": {{userStatus}}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/user/Abdelrahman_8872",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"user",
										"Abdelrahman_8872"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sat, 03 May 2025 21:20:33 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET, POST, DELETE, PUT"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type, api_key, Authorization"
								},
								{
									"key": "Server",
									"value": "Jetty(9.2.9.v20150224)"
								}
							],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": "{\n    \"code\": 200,\n    \"type\": \"unknown\",\n    \"message\": \"325\"\n}"
						}
					]
				},
				{
					"name": "Get User After Update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Checking the status code\r",
									"pm.test(\"Check that status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"//Checking the response time\r",
									"pm.test(\"Check that response time is less than 3000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"//Expected Data\r",
									"var jsonData = pm.response.json();\r",
									"var expectedUsername = pm.collectionVariables.get(\"username\");\r",
									"var expectedEmail = pm.collectionVariables.get(\"email\");\r",
									"var expectedPassword = pm.collectionVariables.get(\"password\");\r",
									"var expectedPhone = pm.collectionVariables.get(\"phone\");\r",
									"\r",
									"//Checking the username of user in the response\r",
									"pm.test(\"Check that the response contains correct username\", function () {\r",
									"    pm.expect(jsonData.username).to.equal(expectedUsername);\r",
									"});\r",
									"\r",
									"//Checking the email of user in the response\r",
									"pm.test(\"Check that the response contains correct email\", function () {\r",
									"    pm.expect(jsonData.email).to.equal(expectedEmail);\r",
									"});\r",
									"\r",
									"//Checking the password of user in the response\r",
									"pm.test(\"Check that the response contains correct password\", function () {\r",
									"    pm.expect(jsonData.password).to.equal(expectedPassword);\r",
									"});\r",
									"\r",
									"//Checking the phone number of user in the response\r",
									"pm.test(\"Check that the response contains correct phone number\", function () {\r",
									"    pm.expect(jsonData.phone).to.equal(expectedPhone);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/user/{{username}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"{{username}}"
							]
						},
						"description": "This endpoint allows you to retrieve the details of a user after their information has been updated, using their username.\n\n#### Request\n\n- Method: `GET`\n    \n- URL: `{{base_url}}/user/{{username}}`\n    \n- Headers:\n    \n    - `accept: application/json`\n        \n\n#### Response\n\nThe response will include the details of the updated user, such as their ID, username, first name, last name, email, phone, and user status."
					},
					"response": []
				},
				{
					"name": "User Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Checking the status code\r",
									"pm.test(\"Check that status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"//Checking the response time\r",
									"pm.test(\"Check that response time is less than 3000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"//Checking the message value\r",
									"pm.test(\"Check that message value is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"logged in user session\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/user/login?username={{username}}&password={{password}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"login"
							],
							"query": [
								{
									"key": "username",
									"value": "{{username}}"
								},
								{
									"key": "password",
									"value": "{{password}}"
								}
							]
						},
						"description": "This endpoint allows users to log in with their username and password. It is an HTTP GET request to `{{base_url}}/user/login` with the `username` and `password` as query parameters.\n\n#### Request\n\n- Method: `GET`\n    \n- URL: {{base_url}}/user/login?username={{username}}&password={{password}}\n    \n- `username` (query parameter): - The username of the user.\n    \n- `password` (query parameter): The password of the user.\n    \n\n### Response\n\nUpon a successful login, the endpoint returns a JSON response with the following fields:\n\n- `code` (integer): Indicates the status of the request.\n    \n- `type` (string): Represents the type of the response.\n    \n- `message` (string): Provides additional information or messages related to the login process."
					},
					"response": [
						{
							"name": "User Login",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://petstore.swagger.io/v2/user/login?username=Abdelrahman_3574&password=jfUbcAoONK",
									"protocol": "https",
									"host": [
										"petstore",
										"swagger",
										"io"
									],
									"path": [
										"v2",
										"user",
										"login"
									],
									"query": [
										{
											"key": "username",
											"value": "Abdelrahman_3574"
										},
										{
											"key": "password",
											"value": "jfUbcAoONK"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sat, 03 May 2025 21:32:45 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET, POST, DELETE, PUT"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type, api_key, Authorization"
								},
								{
									"key": "X-Expires-After",
									"value": "Sat May 03 22:32:45 UTC 2025"
								},
								{
									"key": "X-Rate-Limit",
									"value": "5000"
								},
								{
									"key": "Server",
									"value": "Jetty(9.2.9.v20150224)"
								}
							],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": "{\n    \"code\": 200,\n    \"type\": \"unknown\",\n    \"message\": \"logged in user session:1746307965204\"\n}"
						}
					]
				},
				{
					"name": "User Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Checking the status code\r",
									"pm.test(\"Check that status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"//Checking the response time\r",
									"pm.test(\"Check that response time is less than 3000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"//Checking the message value\r",
									"pm.test(\"Check that message value is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.equal(\"ok\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/user/logout",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"logout"
							]
						},
						"description": "This endpoint is used to log out the user from the system.\n\n### Request\n\n- Method: `GET`\n    \n- URL: `{{base_url}}/user/logout`\n    \n\n### Response\n\n- Upon a successful logout, the endpoint returns a JSON response with the following fields:\n    \n    - `code` (integer): Indicates the status of the request.\n        \n    - `type` (string): Represents the type of the response.\n        \n    - `message` (string): Provides additional information or messages related to the logout process."
					},
					"response": [
						{
							"name": "User Logout",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://petstore.swagger.io/v2/user/logout",
									"protocol": "https",
									"host": [
										"petstore",
										"swagger",
										"io"
									],
									"path": [
										"v2",
										"user",
										"logout"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sat, 03 May 2025 21:37:04 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET, POST, DELETE, PUT"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type, api_key, Authorization"
								},
								{
									"key": "Server",
									"value": "Jetty(9.2.9.v20150224)"
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 200,\n    \"type\": \"unknown\",\n    \"message\": \"ok\"\n}"
						}
					]
				},
				{
					"name": "Delete User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Checking the status code\r",
									"pm.test(\"Check that status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"//Checking the response time\r",
									"pm.test(\"Check that response time is less than 3000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"//Checking the message value\r",
									"pm.test(\"Check that message value is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var expectedMessage = pm.collectionVariables.get(\"username\");\r",
									"    pm.expect(jsonData.message).to.eql(expectedMessage);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/user/{{username}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"{{username}}"
							]
						},
						"description": "This endpoint is used to delete a user with the specified username.\n\n#### Request\n\n- Method: `Delete`\n    \n- URL: {{base_url}}/user/{{username}}\n    \n- `username` (path parameter) - The username of the user to be deleted.\n    \n\n#### Response\n\nThe response will be a JSON object with the following properties:\n\n- `code` (integer) - The status code of the response.\n    \n- `type` (string) - The type of the response.\n    \n- `message` (string) - A message providing additional information about the response."
					},
					"response": [
						{
							"name": "Delete User",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://petstore.swagger.io/v2/user/Abdelrahman_3574",
									"protocol": "https",
									"host": [
										"petstore",
										"swagger",
										"io"
									],
									"path": [
										"v2",
										"user",
										"Abdelrahman_3574"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sat, 03 May 2025 21:40:44 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET, POST, DELETE, PUT"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type, api_key, Authorization"
								},
								{
									"key": "Server",
									"value": "Jetty(9.2.9.v20150224)"
								}
							],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": "{\n    \"code\": 200,\n    \"type\": \"unknown\",\n    \"message\": \"Abdelrahman_3574\"\n}"
						}
					]
				},
				{
					"name": "Get User After Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Checking the status code\r",
									"pm.test(\"Check that status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"//Checking the response time\r",
									"pm.test(\"Check that response time is less than 3000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"//Checking the error message\r",
									"pm.test(\"Check that error message is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"User not found\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/user/{{username}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"{{username}}"
							]
						},
						"description": "This endpoint retrieves the details of a specific user.\n\nNote: If the user has been deleted, it will return an error or indicate that the user is not found.\n\n#### Request\n\n- Method: GET\n    \n- URL: `{{base_url}}/user/{{username}}`\n    \n\n#### Response\n\n- `code` (number): The error code.\n    \n- `type` (string): The type of error.\n    \n- `message` (string): The error message."
					},
					"response": [
						{
							"name": "Get User After Delete",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://petstore.swagger.io/v2/user/Abdelrahman_3574",
									"protocol": "https",
									"host": [
										"petstore",
										"swagger",
										"io"
									],
									"path": [
										"v2",
										"user",
										"Abdelrahman_3574"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sat, 03 May 2025 21:44:06 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET, POST, DELETE, PUT"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type, api_key, Authorization"
								},
								{
									"key": "Server",
									"value": "Jetty(9.2.9.v20150224)"
								}
							],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": "{\n    \"code\": 1,\n    \"type\": \"error\",\n    \"message\": \"User not found\"\n}"
						}
					]
				}
			],
			"description": "> _**This folder contains requests to manage user accounts, including creating, updating, retrieving, and deleting users.**_"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "petID",
			"value": 542
		},
		{
			"key": "categoryID",
			"value": 3
		},
		{
			"key": "category",
			"value": "Dogs"
		},
		{
			"key": "petName",
			"value": "Coco931"
		},
		{
			"key": "photoUrl",
			"value": "https://petstore.com/images/hamster5.jpg",
			"type": "string"
		},
		{
			"key": "tagID",
			"value": 9
		},
		{
			"key": "tag",
			"value": "Hunter"
		},
		{
			"key": "orderID",
			"value": 783
		},
		{
			"key": "quantity",
			"value": 10
		},
		{
			"key": "shipDate",
			"value": "2023-12-27T13:01:19.405Z"
		},
		{
			"key": "orderStatus",
			"value": "placed"
		},
		{
			"key": "petStatus",
			"value": "sold"
		},
		{
			"key": "orderComplete",
			"value": true
		},
		{
			"key": "userID",
			"value": 591
		},
		{
			"key": "username",
			"value": "Abdelrahman_8326"
		},
		{
			"key": "firstName",
			"value": "Abdelrahman7886"
		},
		{
			"key": "lastName",
			"value": "Fahmy6119"
		},
		{
			"key": "email",
			"value": "user_3060@example.com"
		},
		{
			"key": "password",
			"value": "!sgzrP*qK)"
		},
		{
			"key": "phone",
			"value": "+4472118361096"
		},
		{
			"key": "userStatus",
			"value": 2
		}
	]
}